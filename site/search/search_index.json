{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>My name is UTxO Maestro, a Blockchain Architect, Crypto maximalist and Software/Systems Engineer.</p>"},{"location":"#welcome-to-proof-of-post","title":"Welcome to Proof of Post","text":"<p>Proof of Post is a revolutionary Cardano-native social media platform - the world's first truly decentralized Twitter-like experience built specifically for the Cardano ecosystem. </p>"},{"location":"#what-makes-proof-of-post-special","title":"What Makes Proof of Post Special?","text":"<ul> <li>\ud83d\udd10 Wallet-Based Authentication - Connect with your Cardano wallet instead of traditional login</li> <li>\ud83d\udc8e Cryptographic Verification - Every post is cryptographically signed and verifiable on-chain</li> <li>\ud83d\udcb0 Built-in Monetization - Tip creators in ADA, create paid content, and participate in a token economy</li> <li>\ud83c\udff7\ufe0f ADA Handle Integration - Use your on-chain ADA handle as your verified social identity</li> <li>\ud83c\udf10 Fully Decentralized - Content stored on IPFS, identities on Cardano, no central authority</li> </ul> <p>Proof of Post combines the familiar social media experience you love with the security, ownership, and financial opportunities of the Cardano blockchain. It's not just social media - it's the future of decentralized social interaction.</p>"},{"location":"developers/api-documentation/","title":"API Documentation","text":"<p>Complete reference for Proof of Post's RESTful API, enabling developers to build integrations and applications on top of the platform.</p>"},{"location":"developers/api-documentation/#authentication","title":"\ud83d\udd10 Authentication","text":""},{"location":"developers/api-documentation/#wallet-based-authentication","title":"Wallet-Based Authentication","text":"<p>All API requests require JWT authentication obtained through wallet signature verification.</p> <pre><code>// Authentication flow\nconst authResponse = await fetch('/api/auth/challenge', {\n  method: 'POST',\n  headers: { 'Content-Type': 'application/json' },\n  body: JSON.stringify({ address: walletAddress })\n});\n\nconst { challenge } = await authResponse.json();\n\n// Sign with wallet (using Lucid or similar)\nconst signature = await wallet.signMessage(challenge);\n\nconst verifyResponse = await fetch('/api/auth/verify', {\n  method: 'POST',\n  headers: { 'Content-Type': 'application/json' },\n  body: JSON.stringify({ address: walletAddress, signature, challenge })\n});\n\nconst { token } = await verifyResponse.json();\n</code></pre>"},{"location":"developers/api-documentation/#using-jwt-tokens","title":"Using JWT Tokens","text":"<p>Include the JWT token in the Authorization header for authenticated requests:</p> <pre><code>const response = await fetch('/api/posts', {\n  headers: {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  }\n});\n</code></pre>"},{"location":"developers/api-documentation/#posts-api","title":"\ud83d\udcdd Posts API","text":""},{"location":"developers/api-documentation/#create-post","title":"Create Post","text":"<pre><code>POST /api/posts\nContent-Type: application/json\nAuthorization: Bearer &lt;jwt_token&gt;\n\n{\n  \"content\": \"Hello Cardano community! #cardano $ada\",\n  \"mediaUrls\": [\"ipfs://QmHash...\"],\n  \"isPaidContent\": false,\n  \"priceLovelace\": 0,\n  \"signature\": \"optional_post_signature\"\n}\n</code></pre>"},{"location":"developers/api-documentation/#get-posts-feed","title":"Get Posts Feed","text":"<pre><code>GET /api/posts?limit=20&amp;offset=0&amp;userId=optional\nAuthorization: Bearer &lt;jwt_token&gt;\n\nResponse:\n{\n  \"posts\": [\n    {\n      \"id\": \"post_id\",\n      \"userId\": \"user_id\",\n      \"content\": \"Post content\",\n      \"mediaUrls\": [\"ipfs://...\"],\n      \"reactionCounts\": {\n        \"like\": 5,\n        \"rocket\": 2,\n        \"diamond\": 1,\n        \"degen\": 0\n      },\n      \"boostCount\": 3,\n      \"replyCount\": 7,\n      \"createdAt\": \"2024-01-01T00:00:00.000Z\",\n      \"user\": {\n        \"username\": \"creator\",\n        \"adaHandle\": \"$handle\",\n        \"avatarUrl\": \"ipfs://...\"\n      }\n    }\n  ],\n  \"hasMore\": true\n}\n</code></pre>"},{"location":"developers/api-documentation/#react-to-post","title":"React to Post","text":"<pre><code>POST /api/posts/:postId/react\nContent-Type: application/json\nAuthorization: Bearer &lt;jwt_token&gt;\n\n{\n  \"reactionType\": \"like\" | \"rocket\" | \"diamond\" | \"degen\"\n}\n</code></pre>"},{"location":"developers/api-documentation/#boost-post","title":"Boost Post","text":"<pre><code>POST /api/posts/:postId/boost\nContent-Type: application/json\nAuthorization: Bearer &lt;jwt_token&gt;\n\n{\n  \"comment\": \"Optional boost comment\"\n}\n</code></pre>"},{"location":"developers/api-documentation/#users-api","title":"\ud83d\udc65 Users API","text":""},{"location":"developers/api-documentation/#get-user-profile","title":"Get User Profile","text":"<pre><code>GET /api/users/:userId\nAuthorization: Bearer &lt;jwt_token&gt;\n\nResponse:\n{\n  \"id\": \"user_id\",\n  \"walletAddress\": \"addr1...\",\n  \"username\": \"username\",\n  \"adaHandle\": \"$handle\",\n  \"displayName\": \"Display Name\",\n  \"bio\": \"User bio\",\n  \"avatarUrl\": \"ipfs://...\",\n  \"bannerUrl\": \"ipfs://...\",\n  \"followerCount\": 150,\n  \"followingCount\": 75,\n  \"postCount\": 42,\n  \"isFollowing\": true,\n  \"createdAt\": \"2024-01-01T00:00:00.000Z\"\n}\n</code></pre>"},{"location":"developers/api-documentation/#update-profile","title":"Update Profile","text":"<pre><code>PUT /api/profile\nContent-Type: application/json\nAuthorization: Bearer &lt;jwt_token&gt;\n\n{\n  \"username\": \"newusername\",\n  \"displayName\": \"New Display Name\",\n  \"bio\": \"Updated bio\",\n  \"avatarUrl\": \"ipfs://new_avatar\",\n  \"websiteUrl\": \"https://example.com\",\n  \"twitterHandle\": \"twitter_handle\"\n}\n</code></pre>"},{"location":"developers/api-documentation/#followunfollow-user","title":"Follow/Unfollow User","text":"<pre><code>POST /api/users/:userId/follow\nAuthorization: Bearer &lt;jwt_token&gt;\n\nDELETE /api/users/:userId/follow\nAuthorization: Bearer &lt;jwt_token&gt;\n</code></pre>"},{"location":"developers/api-documentation/#search-api","title":"\ud83d\udd0d Search API","text":""},{"location":"developers/api-documentation/#universal-search","title":"Universal Search","text":"<pre><code>GET /api/search?q=cardano&amp;type=all&amp;limit=20&amp;offset=0\nAuthorization: Bearer &lt;jwt_token&gt;\n\nResponse:\n{\n  \"posts\": [...],\n  \"users\": [...],\n  \"tokens\": [...],\n  \"topics\": [...]\n}\n</code></pre>"},{"location":"developers/api-documentation/#search-types","title":"Search Types","text":"<ul> <li><code>all</code> - Search everything</li> <li><code>posts</code> - Posts only</li> <li><code>users</code> - Users only  </li> <li><code>tokens</code> - Tokens only</li> <li><code>topics</code> - Hashtags only</li> </ul>"},{"location":"developers/api-documentation/#tokens-api","title":"\ud83e\ude99 Tokens API","text":""},{"location":"developers/api-documentation/#get-token-information","title":"Get Token Information","text":"<pre><code>GET /api/tokens/:tokenId\nAuthorization: Bearer &lt;jwt_token&gt;\n\nResponse:\n{\n  \"id\": \"ada\",\n  \"policyId\": \"\",\n  \"assetName\": \"\",\n  \"ticker\": \"ADA\",\n  \"name\": \"Cardano\",\n  \"description\": \"Cardano native token\",\n  \"logoUrl\": \"ipfs://...\",\n  \"websiteUrl\": \"https://cardano.org\",\n  \"currentPrice\": 0.45,\n  \"priceChange24h\": 5.2,\n  \"marketCap\": 15000000000,\n  \"volume24h\": 250000000,\n  \"holderCount\": 1000000\n}\n</code></pre>"},{"location":"developers/api-documentation/#search-tokens","title":"Search Tokens","text":"<pre><code>GET /api/tokens/search?q=ada&amp;limit=10\nAuthorization: Bearer &lt;jwt_token&gt;\n</code></pre>"},{"location":"developers/api-documentation/#get-token-mentions","title":"Get Token Mentions","text":"<pre><code>GET /api/tokens/:tokenId/mentions?limit=20&amp;offset=0\nAuthorization: Bearer &lt;jwt_token&gt;\n</code></pre>"},{"location":"developers/api-documentation/#payments-api","title":"\ud83d\udcb0 Payments API","text":""},{"location":"developers/api-documentation/#create-payment-intent","title":"Create Payment Intent","text":"<pre><code>POST /api/payments/intent\nContent-Type: application/json\nAuthorization: Bearer &lt;jwt_token&gt;\n\n{\n  \"postId\": \"post_id\",\n  \"type\": \"paid_content\" | \"tip\",\n  \"amountLovelace\": 5000000,\n  \"recipientAddress\": \"addr1...\"\n}\n\nResponse:\n{\n  \"paymentId\": \"payment_id\",\n  \"recipientAddress\": \"addr1...\",\n  \"amountLovelace\": 5000000,\n  \"expiresAt\": \"2024-01-01T01:00:00.000Z\"\n}\n</code></pre>"},{"location":"developers/api-documentation/#verify-payment","title":"Verify Payment","text":"<pre><code>POST /api/payments/:paymentId/verify\nContent-Type: application/json\nAuthorization: Bearer &lt;jwt_token&gt;\n\n{\n  \"transactionHash\": \"tx_hash\"\n}\n</code></pre>"},{"location":"developers/api-documentation/#get-payment-history","title":"Get Payment History","text":"<pre><code>GET /api/payments/history?limit=20&amp;offset=0\nAuthorization: Bearer &lt;jwt_token&gt;\n</code></pre>"},{"location":"developers/api-documentation/#media-api","title":"\ud83d\udcc1 Media API","text":""},{"location":"developers/api-documentation/#upload-to-ipfs","title":"Upload to IPFS","text":"<pre><code>POST /api/ipfs/upload\nContent-Type: multipart/form-data\nAuthorization: Bearer &lt;jwt_token&gt;\n\nForm data:\n- file: &lt;binary_file_data&gt;\n\nResponse:\n{\n  \"cid\": \"QmHash...\",\n  \"url\": \"https://ipfs.io/ipfs/QmHash...\",\n  \"size\": 1024000\n}\n</code></pre>"},{"location":"developers/api-documentation/#analytics-api","title":"\ud83d\udcca Analytics API","text":""},{"location":"developers/api-documentation/#get-user-analytics","title":"Get User Analytics","text":"<pre><code>GET /api/analytics/user\nAuthorization: Bearer &lt;jwt_token&gt;\n\nResponse:\n{\n  \"totalPosts\": 150,\n  \"totalReactions\": 1250,\n  \"totalTipsReceived\": 45.5,\n  \"followerGrowth\": [\n    { \"date\": \"2024-01-01\", \"count\": 100 },\n    { \"date\": \"2024-01-02\", \"count\": 105 }\n  ],\n  \"topPosts\": [...]\n}\n</code></pre>"},{"location":"developers/api-documentation/#notifications-api","title":"\ud83d\udd14 Notifications API","text":""},{"location":"developers/api-documentation/#get-notifications","title":"Get Notifications","text":"<pre><code>GET /api/notifications?limit=20&amp;offset=0&amp;unreadOnly=false\nAuthorization: Bearer &lt;jwt_token&gt;\n\nResponse:\n{\n  \"notifications\": [\n    {\n      \"id\": \"notif_id\",\n      \"type\": \"reaction\" | \"follow\" | \"mention\" | \"tip\" | \"boost\",\n      \"fromUser\": { \"username\": \"user\", \"avatarUrl\": \"...\" },\n      \"postId\": \"optional_post_id\",\n      \"message\": \"liked your post\",\n      \"isRead\": false,\n      \"createdAt\": \"2024-01-01T00:00:00.000Z\"\n    }\n  ],\n  \"unreadCount\": 5\n}\n</code></pre>"},{"location":"developers/api-documentation/#mark-notifications-read","title":"Mark Notifications Read","text":"<pre><code>PUT /api/notifications/read\nContent-Type: application/json\nAuthorization: Bearer &lt;jwt_token&gt;\n\n{\n  \"notificationIds\": [\"id1\", \"id2\", \"id3\"]\n}\n</code></pre>"},{"location":"developers/api-documentation/#error-handling","title":"\ud83d\udea8 Error Handling","text":""},{"location":"developers/api-documentation/#standard-error-response","title":"Standard Error Response","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"INVALID_REQUEST\",\n    \"message\": \"The request parameters are invalid\",\n    \"details\": {\n      \"field\": \"content\",\n      \"issue\": \"Content cannot be empty\"\n    }\n  }\n}\n</code></pre>"},{"location":"developers/api-documentation/#common-error-codes","title":"Common Error Codes","text":"<ul> <li><code>UNAUTHORIZED</code> - Invalid or missing JWT token</li> <li><code>FORBIDDEN</code> - Insufficient permissions</li> <li><code>NOT_FOUND</code> - Resource not found</li> <li><code>VALIDATION_ERROR</code> - Request validation failed</li> <li><code>RATE_LIMITED</code> - Too many requests</li> <li><code>BLOCKCHAIN_ERROR</code> - Blockchain interaction failed</li> </ul>"},{"location":"developers/api-documentation/#rate-limits","title":"\ud83d\udcc8 Rate Limits","text":"<ul> <li>Authenticated requests: 1000 requests per hour</li> <li>Post creation: 10 posts per minute</li> <li>Search requests: 60 requests per minute</li> <li>File uploads: 5 uploads per minute</li> </ul> <p>Rate limit headers included in responses: - <code>X-RateLimit-Limit</code>: Request limit per window - <code>X-RateLimit-Remaining</code>: Remaining requests - <code>X-RateLimit-Reset</code>: Window reset time</p>"},{"location":"developers/api-documentation/#webhooks-coming-soon","title":"\ud83d\udd17 Webhooks (Coming Soon)","text":"<p>Subscribe to real-time events for your applications: - New posts from followed users - Reactions on your posts - New followers - Tips received - Mentions</p> <p>Ready to integrate? Check out the Integration Guide for practical examples.</p>"},{"location":"developers/database-schema/","title":"Database Schema","text":"<p>Complete database schema documentation for Proof of Post, built on SQLite with Drizzle ORM for type safety and performance.</p>"},{"location":"developers/database-schema/#schema-overview","title":"\ud83c\udfd7\ufe0f Schema Overview","text":"<p>The platform uses a relational database design optimized for social media interactions and blockchain integration.</p>"},{"location":"developers/database-schema/#core-tables","title":"Core Tables","text":"<ul> <li>users - User profiles and authentication</li> <li>posts - Content and post metadata</li> <li>sessions - JWT authentication sessions</li> <li>reactions - User reactions to posts</li> <li>boosts - Post sharing/retweeting</li> <li>follows - User follow relationships</li> <li>comments - Post replies and comments</li> <li>bookmarks - Saved posts</li> <li>tips - Token tips sent to posts</li> <li>topics - Hashtag tracking</li> <li>tokens - Token metadata cache</li> <li>paid_posts - Monetized content configuration</li> <li>purchases - Payment tracking</li> <li>media - IPFS file metadata</li> </ul>"},{"location":"developers/database-schema/#users-table","title":"\ud83d\udc65 Users Table","text":"<pre><code>CREATE TABLE users (\n  id TEXT PRIMARY KEY,\n  wallet_address TEXT UNIQUE NOT NULL,\n  username TEXT UNIQUE,\n  ada_handle TEXT UNIQUE,\n  display_name TEXT,\n  bio TEXT,\n  avatar_url TEXT,\n  banner_url TEXT,\n  website_url TEXT,\n  twitter_handle TEXT,\n  discord_handle TEXT,\n  telegram_handle TEXT,\n  follower_count INTEGER DEFAULT 0,\n  following_count INTEGER DEFAULT 0,\n  post_count INTEGER DEFAULT 0,\n  reputation_score INTEGER DEFAULT 0,\n  is_verified BOOLEAN DEFAULT FALSE,\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Indexes\nCREATE INDEX idx_users_wallet_address ON users(wallet_address);\nCREATE INDEX idx_users_username ON users(username);\nCREATE INDEX idx_users_ada_handle ON users(ada_handle);\nCREATE INDEX idx_users_created_at ON users(created_at);\n</code></pre>"},{"location":"developers/database-schema/#user-fields","title":"User Fields","text":"<ul> <li><code>id</code> - Unique user identifier (UUID)</li> <li><code>wallet_address</code> - Cardano wallet address (unique)</li> <li><code>username</code> - Platform username (@username)</li> <li><code>ada_handle</code> - On-chain ADA handle ($handle)</li> <li><code>display_name</code> - User's display name</li> <li><code>bio</code> - User biography (max 280 chars)</li> <li><code>avatar_url</code> - Profile picture IPFS URL</li> <li><code>banner_url</code> - Profile banner IPFS URL</li> <li><code>social_links</code> - External social media links</li> <li><code>reputation_score</code> - Community reputation metric</li> <li><code>is_verified</code> - Verification status for notable accounts</li> </ul>"},{"location":"developers/database-schema/#posts-table","title":"\ud83d\udcdd Posts Table","text":"<pre><code>CREATE TABLE posts (\n  id TEXT PRIMARY KEY,\n  user_id TEXT NOT NULL,\n  content TEXT NOT NULL,\n  media_urls TEXT, -- JSON array of IPFS URLs\n  signature TEXT, -- Cryptographic signature\n  signature_verified BOOLEAN DEFAULT FALSE,\n  hashtags TEXT, -- JSON array of hashtags\n  mentioned_users TEXT, -- JSON array of user IDs\n  mentioned_tokens TEXT, -- JSON array of token IDs\n  reaction_counts TEXT DEFAULT '{\"like\":0,\"rocket\":0,\"diamond\":0,\"degen\":0}',\n  boost_count INTEGER DEFAULT 0,\n  reply_count INTEGER DEFAULT 0,\n  tip_count INTEGER DEFAULT 0,\n  tip_total_lovelace INTEGER DEFAULT 0,\n  view_count INTEGER DEFAULT 0,\n  is_paid_content BOOLEAN DEFAULT FALSE,\n  price_lovelace INTEGER DEFAULT 0,\n  purchase_count INTEGER DEFAULT 0,\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Indexes\nCREATE INDEX idx_posts_user_id ON posts(user_id);\nCREATE INDEX idx_posts_created_at ON posts(created_at DESC);\nCREATE INDEX idx_posts_hashtags ON posts(hashtags);\nCREATE INDEX idx_posts_is_paid_content ON posts(is_paid_content);\nCREATE INDEX idx_posts_signature_verified ON posts(signature_verified);\n\n-- Full-text search index\nCREATE VIRTUAL TABLE posts_fts USING fts5(\n  content,\n  hashtags,\n  content='posts',\n  content_rowid='rowid'\n);\n</code></pre>"},{"location":"developers/database-schema/#post-fields","title":"Post Fields","text":"<ul> <li><code>content</code> - Post text content (max 280 chars)</li> <li><code>media_urls</code> - JSON array of IPFS media URLs</li> <li><code>signature</code> - CIP-8 cryptographic signature</li> <li><code>hashtags</code> - Extracted hashtags for indexing</li> <li><code>mentioned_users/tokens</code> - Referenced entities</li> <li><code>reaction_counts</code> - JSON object with reaction counts</li> <li><code>is_paid_content</code> - Whether content requires payment</li> <li><code>price_lovelace</code> - Price in lovelace for paid content</li> </ul>"},{"location":"developers/database-schema/#reactions-table","title":"\ud83d\udca1 Reactions Table","text":"<pre><code>CREATE TABLE reactions (\n  id TEXT PRIMARY KEY,\n  user_id TEXT NOT NULL,\n  post_id TEXT NOT NULL,\n  reaction_type TEXT NOT NULL CHECK (reaction_type IN ('like', 'rocket', 'diamond', 'degen')),\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\n  FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,\n  UNIQUE(user_id, post_id, reaction_type)\n);\n\n-- Indexes\nCREATE INDEX idx_reactions_post_id ON reactions(post_id);\nCREATE INDEX idx_reactions_user_id ON reactions(user_id);\nCREATE INDEX idx_reactions_type ON reactions(reaction_type);\nCREATE INDEX idx_reactions_created_at ON reactions(created_at);\n</code></pre>"},{"location":"developers/database-schema/#boosts-table","title":"\ud83d\udd04 Boosts Table","text":"<pre><code>CREATE TABLE boosts (\n  id TEXT PRIMARY KEY,\n  user_id TEXT NOT NULL,\n  post_id TEXT NOT NULL,\n  comment TEXT, -- Optional boost comment\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\n  FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,\n  UNIQUE(user_id, post_id)\n);\n\n-- Indexes\nCREATE INDEX idx_boosts_post_id ON boosts(post_id);\nCREATE INDEX idx_boosts_user_id ON boosts(user_id);\nCREATE INDEX idx_boosts_created_at ON boosts(created_at DESC);\n</code></pre>"},{"location":"developers/database-schema/#follows-table","title":"\ud83d\udc65 Follows Table","text":"<pre><code>CREATE TABLE follows (\n  id TEXT PRIMARY KEY,\n  follower_id TEXT NOT NULL,\n  following_id TEXT NOT NULL,\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (follower_id) REFERENCES users(id) ON DELETE CASCADE,\n  FOREIGN KEY (following_id) REFERENCES users(id) ON DELETE CASCADE,\n  UNIQUE(follower_id, following_id),\n  CHECK(follower_id != following_id)\n);\n\n-- Indexes\nCREATE INDEX idx_follows_follower_id ON follows(follower_id);\nCREATE INDEX idx_follows_following_id ON follows(following_id);\nCREATE INDEX idx_follows_created_at ON follows(created_at);\n</code></pre>"},{"location":"developers/database-schema/#comments-table","title":"\ud83d\udcac Comments Table","text":"<pre><code>CREATE TABLE comments (\n  id TEXT PRIMARY KEY,\n  user_id TEXT NOT NULL,\n  post_id TEXT NOT NULL,\n  parent_comment_id TEXT, -- For threaded replies\n  content TEXT NOT NULL,\n  signature TEXT,\n  signature_verified BOOLEAN DEFAULT FALSE,\n  reaction_counts TEXT DEFAULT '{\"like\":0,\"rocket\":0,\"diamond\":0,\"degen\":0}',\n  reply_count INTEGER DEFAULT 0,\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\n  FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,\n  FOREIGN KEY (parent_comment_id) REFERENCES comments(id) ON DELETE CASCADE\n);\n\n-- Indexes\nCREATE INDEX idx_comments_post_id ON comments(post_id);\nCREATE INDEX idx_comments_user_id ON comments(user_id);\nCREATE INDEX idx_comments_parent_id ON comments(parent_comment_id);\nCREATE INDEX idx_comments_created_at ON comments(created_at);\n</code></pre>"},{"location":"developers/database-schema/#tips-table","title":"\ud83d\udcb0 Tips Table","text":"<pre><code>CREATE TABLE tips (\n  id TEXT PRIMARY KEY,\n  from_user_id TEXT NOT NULL,\n  to_post_id TEXT NOT NULL,\n  to_user_id TEXT NOT NULL,\n  amount_lovelace INTEGER NOT NULL,\n  token_policy_id TEXT DEFAULT '',\n  token_asset_name TEXT DEFAULT '',\n  token_amount TEXT DEFAULT '0',\n  transaction_hash TEXT UNIQUE NOT NULL,\n  message TEXT,\n  is_anonymous BOOLEAN DEFAULT FALSE,\n  verified BOOLEAN DEFAULT FALSE,\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (from_user_id) REFERENCES users(id) ON DELETE CASCADE,\n  FOREIGN KEY (to_post_id) REFERENCES posts(id) ON DELETE CASCADE,\n  FOREIGN KEY (to_user_id) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Indexes\nCREATE INDEX idx_tips_to_post_id ON tips(to_post_id);\nCREATE INDEX idx_tips_to_user_id ON tips(to_user_id);\nCREATE INDEX idx_tips_from_user_id ON tips(from_user_id);\nCREATE INDEX idx_tips_transaction_hash ON tips(transaction_hash);\nCREATE INDEX idx_tips_created_at ON tips(created_at DESC);\n</code></pre>"},{"location":"developers/database-schema/#topics-table","title":"\ud83c\udff7\ufe0f Topics Table","text":"<pre><code>CREATE TABLE topics (\n  id TEXT PRIMARY KEY,\n  name TEXT UNIQUE NOT NULL,\n  display_name TEXT NOT NULL,\n  description TEXT,\n  post_count INTEGER DEFAULT 0,\n  follower_count INTEGER DEFAULT 0,\n  trending_score REAL DEFAULT 0,\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Indexes\nCREATE INDEX idx_topics_name ON topics(name);\nCREATE INDEX idx_topics_trending_score ON topics(trending_score DESC);\nCREATE INDEX idx_topics_post_count ON topics(post_count DESC);\n</code></pre>"},{"location":"developers/database-schema/#tokens-table","title":"\ud83e\ude99 Tokens Table","text":"<pre><code>CREATE TABLE tokens (\n  id TEXT PRIMARY KEY,\n  policy_id TEXT NOT NULL,\n  asset_name TEXT NOT NULL,\n  ticker TEXT,\n  name TEXT NOT NULL,\n  description TEXT,\n  logo_url TEXT,\n  website_url TEXT,\n  twitter_handle TEXT,\n  discord_url TEXT,\n  telegram_url TEXT,\n  current_price REAL DEFAULT 0,\n  price_change_24h REAL DEFAULT 0,\n  market_cap REAL DEFAULT 0,\n  volume_24h REAL DEFAULT 0,\n  holder_count INTEGER DEFAULT 0,\n  mention_count INTEGER DEFAULT 0,\n  follower_count INTEGER DEFAULT 0,\n  total_supply TEXT DEFAULT '0',\n  circulating_supply TEXT DEFAULT '0',\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  UNIQUE(policy_id, asset_name)\n);\n\n-- Indexes\nCREATE INDEX idx_tokens_ticker ON tokens(ticker);\nCREATE INDEX idx_tokens_name ON tokens(name);\nCREATE INDEX idx_tokens_policy_id ON tokens(policy_id);\nCREATE INDEX idx_tokens_mention_count ON tokens(mention_count DESC);\nCREATE INDEX idx_tokens_market_cap ON tokens(market_cap DESC);\n</code></pre>"},{"location":"developers/database-schema/#paid-posts-table","title":"\ud83d\udc8e Paid Posts Table","text":"<pre><code>CREATE TABLE paid_posts (\n  id TEXT PRIMARY KEY,\n  post_id TEXT UNIQUE NOT NULL,\n  price_lovelace INTEGER NOT NULL,\n  preview_url TEXT, -- Blurred/watermarked preview\n  full_url TEXT NOT NULL, -- Full resolution content\n  purchase_count INTEGER DEFAULT 0,\n  total_revenue_lovelace INTEGER DEFAULT 0,\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE\n);\n\n-- Indexes\nCREATE INDEX idx_paid_posts_post_id ON paid_posts(post_id);\nCREATE INDEX idx_paid_posts_price ON paid_posts(price_lovelace);\n</code></pre>"},{"location":"developers/database-schema/#purchases-table","title":"\ud83d\uded2 Purchases Table","text":"<pre><code>CREATE TABLE purchases (\n  id TEXT PRIMARY KEY,\n  user_id TEXT NOT NULL,\n  post_id TEXT NOT NULL,\n  paid_post_id TEXT NOT NULL,\n  amount_lovelace INTEGER NOT NULL,\n  transaction_hash TEXT UNIQUE NOT NULL,\n  verified BOOLEAN DEFAULT FALSE,\n  access_granted BOOLEAN DEFAULT FALSE,\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\n  FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,\n  FOREIGN KEY (paid_post_id) REFERENCES paid_posts(id) ON DELETE CASCADE,\n  UNIQUE(user_id, post_id)\n);\n\n-- Indexes\nCREATE INDEX idx_purchases_user_id ON purchases(user_id);\nCREATE INDEX idx_purchases_post_id ON purchases(post_id);\nCREATE INDEX idx_purchases_transaction_hash ON purchases(transaction_hash);\n</code></pre>"},{"location":"developers/database-schema/#sessions-table","title":"\ud83d\udd10 Sessions Table","text":"<pre><code>CREATE TABLE sessions (\n  id TEXT PRIMARY KEY,\n  user_id TEXT NOT NULL,\n  wallet_address TEXT NOT NULL,\n  jwt_token_hash TEXT UNIQUE NOT NULL,\n  expires_at DATETIME NOT NULL,\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  last_used_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  user_agent TEXT,\n  ip_address TEXT,\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE\n);\n\n-- Indexes\nCREATE INDEX idx_sessions_user_id ON sessions(user_id);\nCREATE INDEX idx_sessions_wallet_address ON sessions(wallet_address);\nCREATE INDEX idx_sessions_expires_at ON sessions(expires_at);\nCREATE INDEX idx_sessions_jwt_token_hash ON sessions(jwt_token_hash);\n</code></pre>"},{"location":"developers/database-schema/#media-table","title":"\ud83d\udcc1 Media Table","text":"<pre><code>CREATE TABLE media (\n  id TEXT PRIMARY KEY,\n  user_id TEXT NOT NULL,\n  post_id TEXT,\n  ipfs_cid TEXT UNIQUE NOT NULL,\n  filename TEXT NOT NULL,\n  mime_type TEXT NOT NULL,\n  file_size INTEGER NOT NULL,\n  width INTEGER,\n  height INTEGER,\n  duration REAL, -- For videos\n  alt_text TEXT,\n  is_paid_content BOOLEAN DEFAULT FALSE,\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\n  FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE\n);\n\n-- Indexes\nCREATE INDEX idx_media_user_id ON media(user_id);\nCREATE INDEX idx_media_post_id ON media(post_id);\nCREATE INDEX idx_media_ipfs_cid ON media(ipfs_cid);\nCREATE INDEX idx_media_mime_type ON media(mime_type);\n</code></pre>"},{"location":"developers/database-schema/#notifications-table","title":"\ud83d\udd14 Notifications Table","text":"<pre><code>CREATE TABLE notifications (\n  id TEXT PRIMARY KEY,\n  user_id TEXT NOT NULL,\n  from_user_id TEXT,\n  post_id TEXT,\n  type TEXT NOT NULL CHECK (type IN ('reaction', 'boost', 'comment', 'follow', 'mention', 'tip', 'purchase')),\n  title TEXT NOT NULL,\n  message TEXT NOT NULL,\n  data TEXT, -- JSON data for notification\n  is_read BOOLEAN DEFAULT FALSE,\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\n  FOREIGN KEY (from_user_id) REFERENCES users(id) ON DELETE CASCADE,\n  FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE\n);\n\n-- Indexes\nCREATE INDEX idx_notifications_user_id ON notifications(user_id);\nCREATE INDEX idx_notifications_is_read ON notifications(is_read);\nCREATE INDEX idx_notifications_created_at ON notifications(created_at DESC);\nCREATE INDEX idx_notifications_type ON notifications(type);\n</code></pre>"},{"location":"developers/database-schema/#database-triggers","title":"\ud83d\udd04 Database Triggers","text":""},{"location":"developers/database-schema/#update-counters","title":"Update Counters","text":"<pre><code>-- Update post count when posts are created/deleted\nCREATE TRIGGER update_user_post_count_insert\nAFTER INSERT ON posts\nBEGIN\n  UPDATE users SET \n    post_count = post_count + 1,\n    updated_at = CURRENT_TIMESTAMP\n  WHERE id = NEW.user_id;\nEND;\n\n-- Update reaction counts on posts\nCREATE TRIGGER update_post_reaction_counts\nAFTER INSERT ON reactions\nBEGIN\n  UPDATE posts SET \n    reaction_counts = json_set(\n      reaction_counts, \n      '$.' || NEW.reaction_type, \n      json_extract(reaction_counts, '$.' || NEW.reaction_type) + 1\n    ),\n    updated_at = CURRENT_TIMESTAMP\n  WHERE id = NEW.post_id;\nEND;\n\n-- Update follower counts\nCREATE TRIGGER update_follow_counts\nAFTER INSERT ON follows\nBEGIN\n  UPDATE users SET \n    follower_count = follower_count + 1,\n    updated_at = CURRENT_TIMESTAMP\n  WHERE id = NEW.following_id;\n\n  UPDATE users SET \n    following_count = following_count + 1,\n    updated_at = CURRENT_TIMESTAMP\n  WHERE id = NEW.follower_id;\nEND;\n</code></pre>"},{"location":"developers/database-schema/#performance-optimization","title":"\ud83d\udcca Performance Optimization","text":""},{"location":"developers/database-schema/#query-optimization","title":"Query Optimization","text":"<ul> <li>Composite indexes for common query patterns</li> <li>Partial indexes for filtered queries</li> <li>Full-text search using SQLite FTS5</li> <li>JSON indexes for structured data queries</li> </ul>"},{"location":"developers/database-schema/#maintenance-tasks","title":"Maintenance Tasks","text":"<pre><code>-- Cleanup expired sessions\nDELETE FROM sessions WHERE expires_at &lt; CURRENT_TIMESTAMP;\n\n-- Update trending scores for topics\nUPDATE topics SET trending_score = (\n  SELECT COUNT(*) * 1.0 / (julianday('now') - julianday(MAX(created_at)) + 1)\n  FROM posts \n  WHERE hashtags LIKE '%' || topics.name || '%'\n  AND created_at &gt; datetime('now', '-7 days')\n);\n\n-- Vacuum database periodically\nVACUUM;\nANALYZE;\n</code></pre> <p>Ready to integrate? Check out the Integration Guide for practical implementation examples.</p>"},{"location":"developers/integration-guide/","title":"Integration Guide","text":"<p>Practical guide for integrating with Proof of Post, including code examples, best practices, and common integration patterns.</p>"},{"location":"developers/integration-guide/#quick-start-integration","title":"\ud83d\ude80 Quick Start Integration","text":""},{"location":"developers/integration-guide/#basic-setup","title":"Basic Setup","text":"<pre><code>import { ProofOfPostClient } from '@proofofpost/sdk';\n\nconst client = new ProofOfPostClient({\n  baseUrl: 'https://api.proofofpost.io',\n  walletProvider: 'eternl', // or 'lace', 'vespr'\n});\n\n// Connect wallet and authenticate\nawait client.connect();\nconst isAuthenticated = await client.authenticate();\n</code></pre>"},{"location":"developers/integration-guide/#environment-setup","title":"Environment Setup","text":"<pre><code># Install dependencies\nnpm install @proofofpost/sdk lucid-cardano\n\n# Environment variables\nPROOF_OF_POST_API_URL=https://api.proofofpost.io\nCARDANO_NETWORK=mainnet\nBLOCKFROST_PROJECT_ID=your_project_id\n</code></pre>"},{"location":"developers/integration-guide/#authentication-integration","title":"\ud83d\udd10 Authentication Integration","text":""},{"location":"developers/integration-guide/#wallet-connection-flow","title":"Wallet Connection Flow","text":"<pre><code>class WalletAuth {\n  private wallet: any;\n  private token: string | null = null;\n\n  async connectWallet(walletName: string) {\n    try {\n      // Check if wallet is available\n      if (!window.cardano?.[walletName]) {\n        throw new Error(`${walletName} wallet not found`);\n      }\n\n      // Enable wallet\n      this.wallet = await window.cardano[walletName].enable();\n\n      // Get wallet address\n      const addresses = await this.wallet.getUsedAddresses();\n      const address = addresses[0];\n\n      return { success: true, address };\n    } catch (error) {\n      console.error('Wallet connection failed:', error);\n      return { success: false, error: error.message };\n    }\n  }\n\n  async authenticate(address: string) {\n    try {\n      // Get challenge from server\n      const challengeResponse = await fetch('/api/auth/challenge', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ address })\n      });\n\n      const { challenge } = await challengeResponse.json();\n\n      // Sign challenge with wallet\n      const signature = await this.wallet.signData(\n        Buffer.from(challenge).toString('hex'),\n        Buffer.from(address).toString('hex')\n      );\n\n      // Verify signature and get JWT\n      const authResponse = await fetch('/api/auth/verify', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ address, signature, challenge })\n      });\n\n      const { token } = await authResponse.json();\n      this.token = token;\n\n      return { success: true, token };\n    } catch (error) {\n      console.error('Authentication failed:', error);\n      return { success: false, error: error.message };\n    }\n  }\n\n  getAuthHeaders() {\n    return {\n      'Authorization': `Bearer ${this.token}`,\n      'Content-Type': 'application/json'\n    };\n  }\n}\n</code></pre>"},{"location":"developers/integration-guide/#content-management","title":"\ud83d\udcdd Content Management","text":""},{"location":"developers/integration-guide/#creating-posts","title":"Creating Posts","text":"<pre><code>class PostManager {\n  constructor(private auth: WalletAuth) {}\n\n  async createPost(content: string, options: {\n    mediaFiles?: File[];\n    isPaidContent?: boolean;\n    priceAda?: number;\n    signPost?: boolean;\n  } = {}) {\n    try {\n      let mediaUrls: string[] = [];\n\n      // Upload media files if provided\n      if (options.mediaFiles?.length) {\n        for (const file of options.mediaFiles) {\n          const uploadResponse = await this.uploadMedia(file);\n          mediaUrls.push(uploadResponse.url);\n        }\n      }\n\n      // Prepare post data\n      const postData = {\n        content,\n        mediaUrls,\n        isPaidContent: options.isPaidContent || false,\n        priceLovelace: options.priceAda ? options.priceAda * 1_000_000 : 0\n      };\n\n      // Sign post if requested\n      if (options.signPost) {\n        postData.signature = await this.signPost(postData);\n      }\n\n      // Create post\n      const response = await fetch('/api/posts', {\n        method: 'POST',\n        headers: this.auth.getAuthHeaders(),\n        body: JSON.stringify(postData)\n      });\n\n      return await response.json();\n    } catch (error) {\n      console.error('Post creation failed:', error);\n      throw error;\n    }\n  }\n\n  private async uploadMedia(file: File): Promise&lt;{ url: string; cid: string }&gt; {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await fetch('/api/ipfs/upload', {\n      method: 'POST',\n      headers: { 'Authorization': `Bearer ${this.auth.token}` },\n      body: formData\n    });\n\n    return await response.json();\n  }\n\n  private async signPost(postData: any): Promise&lt;string&gt; {\n    const message = JSON.stringify(postData);\n    return await this.auth.wallet.signData(\n      Buffer.from(message).toString('hex'),\n      Buffer.from(this.auth.address).toString('hex')\n    );\n  }\n}\n</code></pre>"},{"location":"developers/integration-guide/#feed-integration","title":"Feed Integration","text":"<pre><code>class FeedManager {\n  constructor(private auth: WalletAuth) {}\n\n  async getFeed(options: {\n    limit?: number;\n    offset?: number;\n    userId?: string;\n    includeBoosts?: boolean;\n  } = {}) {\n    const params = new URLSearchParams({\n      limit: (options.limit || 20).toString(),\n      offset: (options.offset || 0).toString(),\n      includeBoosts: (options.includeBoosts !== false).toString()\n    });\n\n    if (options.userId) {\n      params.append('userId', options.userId);\n    }\n\n    const response = await fetch(`/api/posts?${params}`, {\n      headers: this.auth.getAuthHeaders()\n    });\n\n    return await response.json();\n  }\n\n  async reactToPost(postId: string, reactionType: 'like' | 'rocket' | 'diamond' | 'degen') {\n    const response = await fetch(`/api/posts/${postId}/react`, {\n      method: 'POST',\n      headers: this.auth.getAuthHeaders(),\n      body: JSON.stringify({ reactionType })\n    });\n\n    return await response.json();\n  }\n\n  async boostPost(postId: string, comment?: string) {\n    const response = await fetch(`/api/posts/${postId}/boost`, {\n      method: 'POST',\n      headers: this.auth.getAuthHeaders(),\n      body: JSON.stringify({ comment })\n    });\n\n    return await response.json();\n  }\n}\n</code></pre>"},{"location":"developers/integration-guide/#payment-integration","title":"\ud83d\udcb0 Payment Integration","text":""},{"location":"developers/integration-guide/#tipping-system","title":"Tipping System","text":"<pre><code>class PaymentManager {\n  constructor(private auth: WalletAuth) {}\n\n  async tipPost(postId: string, amountAda: number, message?: string) {\n    try {\n      // Create payment intent\n      const intentResponse = await fetch('/api/payments/intent', {\n        method: 'POST',\n        headers: this.auth.getAuthHeaders(),\n        body: JSON.stringify({\n          postId,\n          type: 'tip',\n          amountLovelace: amountAda * 1_000_000,\n          message\n        })\n      });\n\n      const { paymentId, recipientAddress, amountLovelace } = await intentResponse.json();\n\n      // Build transaction using Lucid\n      const lucid = await Lucid.new(\n        new Blockfrost('https://cardano-mainnet.blockfrost.io/api/v0', 'your_project_id'),\n        'Mainnet'\n      );\n\n      lucid.selectWallet(this.auth.wallet);\n\n      const tx = await lucid\n        .newTx()\n        .payToAddress(recipientAddress, { lovelace: BigInt(amountLovelace) })\n        .complete();\n\n      const signedTx = await tx.sign().complete();\n      const txHash = await signedTx.submit();\n\n      // Verify payment\n      const verifyResponse = await fetch(`/api/payments/${paymentId}/verify`, {\n        method: 'POST',\n        headers: this.auth.getAuthHeaders(),\n        body: JSON.stringify({ transactionHash: txHash })\n      });\n\n      return await verifyResponse.json();\n    } catch (error) {\n      console.error('Tip payment failed:', error);\n      throw error;\n    }\n  }\n\n  async purchasePaidContent(postId: string) {\n    try {\n      // Get post details to check price\n      const postResponse = await fetch(`/api/posts/${postId}`, {\n        headers: this.auth.getAuthHeaders()\n      });\n      const post = await postResponse.json();\n\n      if (!post.isPaidContent) {\n        throw new Error('Post is not paid content');\n      }\n\n      // Create payment intent\n      const intentResponse = await fetch('/api/payments/intent', {\n        method: 'POST',\n        headers: this.auth.getAuthHeaders(),\n        body: JSON.stringify({\n          postId,\n          type: 'paid_content',\n          amountLovelace: post.priceLovelace\n        })\n      });\n\n      const { paymentId, recipientAddress, amountLovelace } = await intentResponse.json();\n\n      // Process payment (similar to tip flow)\n      // ... payment processing code ...\n\n      return { success: true, txHash };\n    } catch (error) {\n      console.error('Content purchase failed:', error);\n      throw error;\n    }\n  }\n}\n</code></pre>"},{"location":"developers/integration-guide/#search-discovery","title":"\ud83d\udd0d Search &amp; Discovery","text":""},{"location":"developers/integration-guide/#search-integration","title":"Search Integration","text":"<pre><code>class SearchManager {\n  constructor(private auth: WalletAuth) {}\n\n  async search(query: string, options: {\n    type?: 'all' | 'posts' | 'users' | 'tokens' | 'topics';\n    limit?: number;\n    offset?: number;\n  } = {}) {\n    const params = new URLSearchParams({\n      q: query,\n      type: options.type || 'all',\n      limit: (options.limit || 20).toString(),\n      offset: (options.offset || 0).toString()\n    });\n\n    const response = await fetch(`/api/search?${params}`, {\n      headers: this.auth.getAuthHeaders()\n    });\n\n    return await response.json();\n  }\n\n  async getTrendingTopics(limit = 10) {\n    const response = await fetch(`/api/topics/trending?limit=${limit}`, {\n      headers: this.auth.getAuthHeaders()\n    });\n\n    return await response.json();\n  }\n\n  async getTokenInfo(tokenId: string) {\n    const response = await fetch(`/api/tokens/${tokenId}`, {\n      headers: this.auth.getAuthHeaders()\n    });\n\n    return await response.json();\n  }\n}\n</code></pre>"},{"location":"developers/integration-guide/#ui-components","title":"\ud83c\udfa8 UI Components","text":""},{"location":"developers/integration-guide/#react-component-examples","title":"React Component Examples","text":"<pre><code>import React, { useState, useEffect } from 'react';\n\n// Post Component\nexport const PostCard: React.FC&lt;{ post: Post }&gt; = ({ post }) =&gt; {\n  const [reactions, setReactions] = useState(post.reactionCounts);\n\n  const handleReaction = async (type: string) =&gt; {\n    try {\n      await postManager.reactToPost(post.id, type);\n      setReactions(prev =&gt; ({\n        ...prev,\n        [type]: prev[type] + 1\n      }));\n    } catch (error) {\n      console.error('Reaction failed:', error);\n    }\n  };\n\n  return (\n    &lt;div className=\"post-card\"&gt;\n      &lt;div className=\"post-header\"&gt;\n        &lt;img src={post.user.avatarUrl} alt={post.user.username} /&gt;\n        &lt;span&gt;@{post.user.username}&lt;/span&gt;\n        {post.user.adaHandle &amp;&amp; &lt;span&gt;${post.user.adaHandle}&lt;/span&gt;}\n      &lt;/div&gt;\n\n      &lt;div className=\"post-content\"&gt;\n        {post.content}\n        {post.mediaUrls.map(url =&gt; (\n          &lt;img key={url} src={url} alt=\"Post media\" /&gt;\n        ))}\n      &lt;/div&gt;\n\n      &lt;div className=\"post-actions\"&gt;\n        &lt;button onClick={() =&gt; handleReaction('like')}&gt;\n          \u2764\ufe0f {reactions.like}\n        &lt;/button&gt;\n        &lt;button onClick={() =&gt; handleReaction('rocket')}&gt;\n          \ud83d\ude80 {reactions.rocket}\n        &lt;/button&gt;\n        &lt;button onClick={() =&gt; handleReaction('diamond')}&gt;\n          \ud83d\udc8e {reactions.diamond}\n        &lt;/button&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n};\n\n// Wallet Connect Component\nexport const WalletConnector: React.FC = () =&gt; {\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [connectedWallet, setConnectedWallet] = useState&lt;string | null&gt;(null);\n\n  const connectWallet = async (walletName: string) =&gt; {\n    setIsConnecting(true);\n    try {\n      const result = await walletAuth.connectWallet(walletName);\n      if (result.success) {\n        const authResult = await walletAuth.authenticate(result.address);\n        if (authResult.success) {\n          setConnectedWallet(walletName);\n        }\n      }\n    } catch (error) {\n      console.error('Connection failed:', error);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  return (\n    &lt;div className=\"wallet-connector\"&gt;\n      {!connectedWallet ? (\n        &lt;div className=\"wallet-options\"&gt;\n          &lt;button onClick={() =&gt; connectWallet('eternl')} disabled={isConnecting}&gt;\n            Connect Eternl\n          &lt;/button&gt;\n          &lt;button onClick={() =&gt; connectWallet('lace')} disabled={isConnecting}&gt;\n            Connect Lace\n          &lt;/button&gt;\n          &lt;button onClick={() =&gt; connectWallet('vespr')} disabled={isConnecting}&gt;\n            Connect Vespr\n          &lt;/button&gt;\n        &lt;/div&gt;\n      ) : (\n        &lt;div className=\"wallet-connected\"&gt;\n          Connected: {connectedWallet}\n        &lt;/div&gt;\n      )}\n    &lt;/div&gt;\n  );\n};\n</code></pre>"},{"location":"developers/integration-guide/#real-time-updates","title":"\ud83d\udd14 Real-time Updates","text":""},{"location":"developers/integration-guide/#websocket-integration","title":"WebSocket Integration","text":"<pre><code>class RealtimeManager {\n  private ws: WebSocket | null = null;\n  private reconnectAttempts = 0;\n  private maxReconnectAttempts = 5;\n\n  connect(token: string) {\n    const wsUrl = `wss://api.proofofpost.io/ws?token=${token}`;\n    this.ws = new WebSocket(wsUrl);\n\n    this.ws.onopen = () =&gt; {\n      console.log('WebSocket connected');\n      this.reconnectAttempts = 0;\n    };\n\n    this.ws.onmessage = (event) =&gt; {\n      const data = JSON.parse(event.data);\n      this.handleMessage(data);\n    };\n\n    this.ws.onclose = () =&gt; {\n      console.log('WebSocket disconnected');\n      this.attemptReconnect(token);\n    };\n\n    this.ws.onerror = (error) =&gt; {\n      console.error('WebSocket error:', error);\n    };\n  }\n\n  private handleMessage(data: any) {\n    switch (data.type) {\n      case 'new_post':\n        this.onNewPost(data.post);\n        break;\n      case 'reaction':\n        this.onReaction(data.postId, data.reaction);\n        break;\n      case 'tip':\n        this.onTip(data.postId, data.tip);\n        break;\n      case 'notification':\n        this.onNotification(data.notification);\n        break;\n    }\n  }\n\n  private attemptReconnect(token: string) {\n    if (this.reconnectAttempts &lt; this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      setTimeout(() =&gt; {\n        console.log(`Reconnecting... Attempt ${this.reconnectAttempts}`);\n        this.connect(token);\n      }, Math.pow(2, this.reconnectAttempts) * 1000);\n    }\n  }\n\n  // Event handlers\n  onNewPost: (post: any) =&gt; void = () =&gt; {};\n  onReaction: (postId: string, reaction: any) =&gt; void = () =&gt; {};\n  onTip: (postId: string, tip: any) =&gt; void = () =&gt; {};\n  onNotification: (notification: any) =&gt; void = () =&gt; {};\n}\n</code></pre>"},{"location":"developers/integration-guide/#error-handling","title":"\ud83d\udea8 Error Handling","text":""},{"location":"developers/integration-guide/#comprehensive-error-handling","title":"Comprehensive Error Handling","text":"<pre><code>class ProofOfPostError extends Error {\n  constructor(\n    public code: string,\n    message: string,\n    public statusCode?: number,\n    public details?: any\n  ) {\n    super(message);\n    this.name = 'ProofOfPostError';\n  }\n}\n\nclass ErrorHandler {\n  static handle(error: any): ProofOfPostError {\n    if (error instanceof ProofOfPostError) {\n      return error;\n    }\n\n    // Network errors\n    if (error.name === 'NetworkError' || !navigator.onLine) {\n      return new ProofOfPostError(\n        'NETWORK_ERROR',\n        'Network connection failed. Please check your internet connection.',\n        0\n      );\n    }\n\n    // API errors\n    if (error.status) {\n      switch (error.status) {\n        case 401:\n          return new ProofOfPostError('UNAUTHORIZED', 'Authentication required');\n        case 403:\n          return new ProofOfPostError('FORBIDDEN', 'Insufficient permissions');\n        case 404:\n          return new ProofOfPostError('NOT_FOUND', 'Resource not found');\n        case 429:\n          return new ProofOfPostError('RATE_LIMITED', 'Too many requests');\n        default:\n          return new ProofOfPostError('API_ERROR', error.message || 'API request failed');\n      }\n    }\n\n    // Wallet errors\n    if (error.message?.includes('wallet')) {\n      return new ProofOfPostError('WALLET_ERROR', 'Wallet operation failed');\n    }\n\n    // Generic error\n    return new ProofOfPostError('UNKNOWN_ERROR', error.message || 'An unexpected error occurred');\n  }\n}\n</code></pre>"},{"location":"developers/integration-guide/#best-practices","title":"\ud83d\udcca Best Practices","text":""},{"location":"developers/integration-guide/#performance-optimization","title":"Performance Optimization","text":"<ul> <li>Implement caching for frequently accessed data</li> <li>Use pagination for large data sets</li> <li>Optimize images before uploading to IPFS</li> <li>Batch API requests when possible</li> <li>Implement retry logic for failed requests</li> </ul>"},{"location":"developers/integration-guide/#security-guidelines","title":"Security Guidelines","text":"<ul> <li>Validate all inputs before sending to API</li> <li>Never store private keys in your application</li> <li>Use HTTPS for all API communications</li> <li>Implement rate limiting in your client</li> <li>Sanitize user content to prevent XSS</li> </ul>"},{"location":"developers/integration-guide/#user-experience","title":"User Experience","text":"<ul> <li>Show loading states during operations</li> <li>Provide clear error messages to users</li> <li>Implement offline support where possible</li> <li>Use optimistic updates for instant feedback</li> <li>Cache content for faster loading</li> </ul> <p>Ready to build? Start with the API Documentation for detailed endpoint information.</p>"},{"location":"features/content-monetization/","title":"Content Monetization","text":"<p>Proof of Post revolutionizes creator monetization by enabling direct payments between users without platform fees or intermediaries. Creators can earn from their content through multiple mechanisms, all powered by Cardano's blockchain.</p>"},{"location":"features/content-monetization/#paid-media-system","title":"\ud83d\udc8e Paid Media System","text":""},{"location":"features/content-monetization/#how-it-works","title":"How It Works","text":"<p>Creators can monetize images and videos by setting custom prices in ADA:</p> <ol> <li>Content Upload: Creator uploads image/video with monetization enabled</li> <li>Price Setting: Set custom price in ADA for content access</li> <li>Preview Generation: Blurred/watermarked preview shown to users</li> <li>Payment Processing: Users pay ADA to unlock full content</li> <li>Blockchain Verification: Payment verified on Cardano blockchain</li> <li>Content Delivery: Full-resolution content delivered via signed URLs</li> </ol>"},{"location":"features/content-monetization/#creator-benefits","title":"Creator Benefits","text":"<ul> <li>No Platform Fees: Keep 100% of earnings (minus blockchain transaction fees)</li> <li>Instant Payments: Receive ADA directly to your wallet</li> <li>Global Reach: Accept payments from users worldwide</li> <li>Flexible Pricing: Set any price you want for your content</li> <li>Content Protection: Watermarked content prevents unauthorized sharing</li> </ul>"},{"location":"features/content-monetization/#technical-implementation","title":"Technical Implementation","text":"<pre><code>// Create paid post\nconst createPaidPost = async (content: string, mediaFile: File, priceAda: number) =&gt; {\n  // Upload media to IPFS\n  const mediaCid = await uploadToIPFS(mediaFile);\n\n  // Create payment intent\n  const paymentIntent = await fetch('/api/payments/intent', {\n    method: 'POST',\n    body: JSON.stringify({\n      content,\n      mediaCid,\n      priceLovelace: priceAda * 1_000_000 // Convert ADA to lovelace\n    })\n  });\n\n  return paymentIntent.json();\n};\n</code></pre>"},{"location":"features/content-monetization/#tipping-system","title":"\ud83c\udfaf Tipping System","text":""},{"location":"features/content-monetization/#direct-creator-support","title":"Direct Creator Support","text":"<p>Users can tip creators with ADA or other Cardano tokens:</p> <ul> <li>One-Click Tipping: Simple tip buttons on every post</li> <li>Custom Amounts: Set any tip amount you want</li> <li>Multi-Token Support: Tip with ADA, DJED, or other tokens</li> <li>Public Recognition: Tips are publicly visible (amounts optional)</li> <li>Instant Delivery: Tips go directly to creator's wallet</li> </ul>"},{"location":"features/content-monetization/#tipping-features","title":"Tipping Features","text":"<ul> <li>Preset Amounts: Quick-tip buttons for common amounts (1 ADA, 5 ADA, 10 ADA)</li> <li>Custom Tipping: Enter any amount manually</li> <li>Token Selection: Choose from available tokens in your wallet</li> <li>Tip Messages: Include optional message with your tip</li> <li>Anonymous Tipping: Option to tip without revealing identity</li> </ul>"},{"location":"features/content-monetization/#creator-analytics","title":"Creator Analytics","text":"<ul> <li>Tip Tracking: Monitor total tips received</li> <li>Top Supporters: See your most generous supporters</li> <li>Token Breakdown: Analyze which tokens you receive most</li> <li>Performance Metrics: Correlation between content quality and tips</li> <li>Payout History: Complete record of all earnings</li> </ul>"},{"location":"features/content-monetization/#revenue-streams","title":"\ud83d\udcb0 Revenue Streams","text":""},{"location":"features/content-monetization/#multiple-monetization-methods","title":"Multiple Monetization Methods","text":""},{"location":"features/content-monetization/#1-paid-media-content","title":"1. Paid Media Content","text":"<ul> <li>Premium Images: High-resolution photos, artwork, exclusive content</li> <li>Video Content: Educational videos, entertainment, tutorials</li> <li>Behind-the-Scenes: Exclusive access to your creative process</li> <li>Limited Editions: Rare or time-limited content releases</li> </ul>"},{"location":"features/content-monetization/#2-tipping-revenue","title":"2. Tipping Revenue","text":"<ul> <li>Appreciation Tips: Users tip for content they enjoyed</li> <li>Support Tips: Ongoing support from dedicated followers</li> <li>Milestone Tips: Celebration tips for achievements</li> <li>Request Tips: Tips for specific content requests</li> </ul>"},{"location":"features/content-monetization/#3-token-gated-content","title":"3. Token-Gated Content","text":"<ul> <li>Holder-Only Posts: Content exclusive to token holders</li> <li>Tiered Access: Different content levels based on holdings</li> <li>Community Perks: Special access for community members</li> <li>VIP Content: Premium content for top supporters</li> </ul>"},{"location":"features/content-monetization/#creator-dashboard","title":"\ud83d\udcca Creator Dashboard","text":""},{"location":"features/content-monetization/#earnings-overview","title":"Earnings Overview","text":"<ul> <li>Total Earnings: Lifetime earnings across all revenue streams</li> <li>Monthly Revenue: Current month performance tracking</li> <li>Revenue Breakdown: Tips vs paid content vs other sources</li> <li>Top Content: Highest-earning posts and media</li> <li>Growth Metrics: Earnings growth over time</li> </ul>"},{"location":"features/content-monetization/#payment-management","title":"Payment Management","text":"<ul> <li>Wallet Integration: Automatic payments to connected wallet</li> <li>Payment History: Complete record of all transactions</li> <li>Tax Documentation: Export data for tax reporting</li> <li>Currency Conversion: USD value tracking for accounting</li> <li>Withdrawal Options: Multiple payout methods available</li> </ul>"},{"location":"features/content-monetization/#performance-analytics","title":"Performance Analytics","text":"<ul> <li>Content Performance: Which content generates most revenue</li> <li>Audience Insights: Demographics of paying supporters</li> <li>Engagement Correlation: Relationship between engagement and earnings</li> <li>Optimal Pricing: Data-driven pricing recommendations</li> <li>Revenue Forecasting: Projected earnings based on trends</li> </ul>"},{"location":"features/content-monetization/#payment-security","title":"\ud83d\udee1\ufe0f Payment Security","text":""},{"location":"features/content-monetization/#blockchain-verification","title":"Blockchain Verification","text":"<ul> <li>On-Chain Payments: All payments verified on Cardano blockchain</li> <li>Transaction Hashes: Immutable proof of payment</li> <li>Double-Spend Prevention: Blockchain prevents payment fraud</li> <li>Automatic Verification: Instant payment confirmation</li> <li>Dispute Resolution: Blockchain records provide clear evidence</li> </ul>"},{"location":"features/content-monetization/#content-protection","title":"Content Protection","text":"<ul> <li>Watermarking: Paid content includes buyer identification</li> <li>Signed URLs: Temporary, secure links for content access</li> <li>Access Control: Verify payment before content delivery</li> <li>Download Tracking: Monitor content access and downloads</li> <li>Anti-Piracy: Measures to prevent unauthorized sharing</li> </ul>"},{"location":"features/content-monetization/#user-privacy","title":"User Privacy","text":"<ul> <li>Optional Anonymity: Choose to tip or purchase anonymously</li> <li>Privacy Controls: Control what payment information is public</li> <li>Data Protection: Secure handling of payment data</li> <li>GDPR Compliance: European privacy regulation compliance</li> <li>Selective Disclosure: Choose what to share publicly</li> </ul>"},{"location":"features/content-monetization/#creator-tools","title":"\ud83c\udfa8 Creator Tools","text":""},{"location":"features/content-monetization/#content-management","title":"Content Management","text":"<ul> <li>Pricing Tools: Easy price setting for paid content</li> <li>Content Calendar: Schedule paid content releases</li> <li>Bulk Operations: Manage multiple paid posts efficiently</li> <li>Preview Management: Control how content previews appear</li> <li>Archive System: Organize and categorize paid content</li> </ul>"},{"location":"features/content-monetization/#audience-engagement","title":"Audience Engagement","text":"<ul> <li>Supporter Recognition: Thank top supporters publicly</li> <li>Exclusive Updates: Special content for paying supporters</li> <li>Community Building: Foster community around your content</li> <li>Feedback Collection: Gather input from paying audience</li> <li>Loyalty Programs: Reward consistent supporters</li> </ul>"},{"location":"features/content-monetization/#marketing-features","title":"Marketing Features","text":"<ul> <li>Promotion Tools: Boost paid content visibility</li> <li>Cross-Promotion: Collaborate with other creators</li> <li>Social Sharing: Easy sharing of paid content previews</li> <li>Email Integration: Notify subscribers of new paid content</li> <li>Analytics Integration: Track marketing campaign effectiveness</li> </ul>"},{"location":"features/content-monetization/#success-strategies","title":"\ud83d\udcc8 Success Strategies","text":""},{"location":"features/content-monetization/#pricing-optimization","title":"Pricing Optimization","text":"<ul> <li>Market Research: Analyze similar creator pricing</li> <li>A/B Testing: Test different price points</li> <li>Value Proposition: Clearly communicate content value</li> <li>Tiered Pricing: Offer multiple price points</li> <li>Dynamic Pricing: Adjust prices based on demand</li> </ul>"},{"location":"features/content-monetization/#content-strategy","title":"Content Strategy","text":"<ul> <li>Quality Focus: High-quality content commands higher prices</li> <li>Exclusive Content: Offer content not available elsewhere</li> <li>Regular Schedule: Consistent posting builds audience</li> <li>Community Engagement: Build relationships with supporters</li> <li>Value Addition: Provide educational or entertainment value</li> </ul>"},{"location":"features/content-monetization/#audience-building","title":"Audience Building","text":"<ul> <li>Free Content: Use free posts to attract audience</li> <li>Social Media: Promote on other platforms</li> <li>Collaborations: Work with other creators</li> <li>Community Participation: Engage with token communities</li> <li>SEO Optimization: Use relevant hashtags and keywords</li> </ul> <p>Content monetization on Proof of Post empowers creators to build sustainable income streams while maintaining direct relationships with their audience, all powered by the transparency and efficiency of blockchain technology.</p> <p>Next: Learn how to get started with our User Guide.</p>"},{"location":"features/social-media/","title":"Social Media Features","text":"<p>Proof of Post provides a comprehensive social media experience that rivals traditional platforms while adding the benefits of blockchain integration. Here's everything you can do:</p>"},{"location":"features/social-media/#content-creation","title":"\ud83d\udcdd Content Creation","text":""},{"location":"features/social-media/#rich-post-composer","title":"Rich Post Composer","text":"<p>The platform features a sophisticated composer that supports multiple content types:</p> <ul> <li>Text Posts with 280 character limit (like Twitter)</li> <li>Rich formatting with automatic URL, mention, and hashtag detection</li> <li>Character counter with visual feedback as you approach the limit</li> <li>Auto-suggestions for tokens, users, and hashtags as you type</li> </ul>"},{"location":"features/social-media/#media-support","title":"Media Support","text":"<ul> <li>Image Uploads: JPEG, PNG, WebP with automatic IPFS storage</li> <li>GIF Integration: Built-in Giphy picker for animated content</li> <li>Video Support: Short video clips with preview thumbnails</li> <li>Multiple Media: Attach up to 4 images per post</li> </ul>"},{"location":"features/social-media/#content-enhancement","title":"Content Enhancement","text":"<ul> <li>Hashtag Support: Use <code>#topic</code> to categorize and make content discoverable</li> <li>Token Mentions: Reference <code>$TOKEN</code> to automatically link to token pages</li> <li>User Mentions: Tag <code>@username</code> or <code>$handle</code> to notify other users</li> <li>URL Embedding: Automatic preview generation for shared links</li> </ul>"},{"location":"features/social-media/#social-interactions","title":"\ud83d\udcac Social Interactions","text":""},{"location":"features/social-media/#reaction-system","title":"Reaction System","text":"<p>Express yourself with multiple reaction types: - \u2764\ufe0f Like: Show appreciation for content - \ud83d\ude80 Rocket: Indicate excitement or bullish sentiment - \ud83d\udc8e Diamond: Mark high-quality or valuable content - \ud83e\udd21 Degen: Playful reaction for risky or meme content</p>"},{"location":"features/social-media/#engagement-features","title":"Engagement Features","text":"<ul> <li>Boost/Retweet: Share content with your followers</li> <li>Simple boost without commentary</li> <li>Quote boost with your own comment</li> <li>Boost counter shows total shares</li> <li>Comments &amp; Replies: Threaded conversations on any post</li> <li>Bookmarks: Save posts for later reading</li> <li>Share: Generate links to share posts outside the platform</li> </ul>"},{"location":"features/social-media/#social-graph","title":"Social Graph","text":"<ul> <li>Follow System: Build your network by following interesting users</li> <li>Follower/Following Lists: See who's connected to any user</li> <li>Mutual Connections: Discover users through your network</li> <li>Profile Badges: Verification indicators for notable accounts</li> </ul>"},{"location":"features/social-media/#discovery-navigation","title":"\ud83d\udd0d Discovery &amp; Navigation","text":""},{"location":"features/social-media/#feed-experience","title":"Feed Experience","text":"<ul> <li>Home Feed: Personalized timeline from users you follow</li> <li>Chronological Order: Latest posts appear first</li> <li>Infinite Scroll: Smooth loading of older content</li> <li>60fps Performance: Virtualized rendering for smooth scrolling</li> <li>Real-time Updates: New posts appear automatically</li> </ul>"},{"location":"features/social-media/#search-capabilities","title":"Search Capabilities","text":"<p>Comprehensive search across all platform content:</p>"},{"location":"features/social-media/#post-search","title":"Post Search","text":"<ul> <li>Full-text search across all post content</li> <li>Hashtag filtering to find topic-specific discussions</li> <li>Date range filtering for temporal searches</li> <li>Media filtering to find posts with images/videos</li> </ul>"},{"location":"features/social-media/#user-discovery","title":"User Discovery","text":"<ul> <li>Username search with partial matching</li> <li>ADA handle lookup for verified accounts</li> <li>Wallet address search for direct user finding</li> <li>Bio keyword search to find users by interests</li> </ul>"},{"location":"features/social-media/#token-integration","title":"Token Integration","text":"<ul> <li>Token ticker search (e.g., \"ADA\", \"DJED\")</li> <li>Token name search for full project names</li> <li>Policy ID lookup for specific asset identification</li> <li>Token mention tracking in posts</li> </ul>"},{"location":"features/social-media/#topic-organization","title":"Topic Organization","text":"<ul> <li>Trending Topics: Real-time hashtag popularity</li> <li>Topic Pages: Dedicated feeds for specific hashtags</li> <li>Topic Following: Subscribe to hashtag-based feeds</li> <li>Hot Topics Widget: Discover what's trending now</li> </ul>"},{"location":"features/social-media/#content-analytics","title":"\ud83d\udcca Content Analytics","text":""},{"location":"features/social-media/#post-performance","title":"Post Performance","text":"<ul> <li>Reaction Counts: See total engagement for each reaction type</li> <li>Boost Analytics: Track how many times content was shared</li> <li>Comment Metrics: Monitor discussion generation</li> <li>Reach Estimates: Understand content visibility</li> </ul>"},{"location":"features/social-media/#user-insights","title":"User Insights","text":"<ul> <li>Profile Views: See who's checking out your profile</li> <li>Follower Growth: Track your audience expansion</li> <li>Top Posts: Identify your most successful content</li> <li>Engagement Rate: Measure audience interaction levels</li> </ul>"},{"location":"features/social-media/#customization-options","title":"\ud83c\udfa8 Customization Options","text":""},{"location":"features/social-media/#display-preferences","title":"Display Preferences","text":"<ul> <li>Dark/Light Mode: Choose your preferred theme</li> <li>Compact View: Information-dense display option</li> <li>Font Size: Adjust text size for readability</li> <li>Animation Settings: Control motion preferences</li> </ul>"},{"location":"features/social-media/#feed-customization","title":"Feed Customization","text":"<ul> <li>Algorithmic vs Chronological: Choose your feed ordering</li> <li>Content Filtering: Hide specific types of content</li> <li>Language Preferences: Filter by post language</li> <li>Quality Filters: Hide low-engagement content</li> </ul>"},{"location":"features/social-media/#notifications","title":"\ud83d\udd14 Notifications","text":""},{"location":"features/social-media/#real-time-alerts","title":"Real-time Alerts","text":"<ul> <li>Mentions: When someone tags you in a post or comment</li> <li>Reactions: When users interact with your content</li> <li>Followers: When new users follow you</li> <li>Boosts: When your content gets shared</li> <li>Comments: When someone replies to your posts</li> </ul>"},{"location":"features/social-media/#notification-management","title":"Notification Management","text":"<ul> <li>Push Notifications: Browser/mobile alerts</li> <li>Email Digests: Weekly summaries of activity</li> <li>In-app Notifications: Real-time activity feed</li> <li>Granular Controls: Choose what alerts you receive</li> </ul>"},{"location":"features/social-media/#advanced-features","title":"\ud83d\udca1 Advanced Features","text":""},{"location":"features/social-media/#thread-creation","title":"Thread Creation","text":"<ul> <li>Reply Chains: Create long-form content through connected posts</li> <li>Thread Indicators: Visual connections between related posts</li> <li>Thread Navigation: Easy browsing of conversation flows</li> </ul>"},{"location":"features/social-media/#content-moderation","title":"Content Moderation","text":"<ul> <li>Community Guidelines: Clear rules for acceptable content</li> <li>Reporting System: Flag inappropriate content or behavior</li> <li>Blocking: Prevent specific users from interacting with you</li> <li>Muting: Hide content from users without blocking</li> </ul>"},{"location":"features/social-media/#accessibility","title":"Accessibility","text":"<ul> <li>Screen Reader Support: Full ARIA compliance</li> <li>Keyboard Navigation: Complete interface control via keyboard</li> <li>High Contrast Mode: Enhanced visibility options</li> <li>Alt Text Support: Image descriptions for accessibility</li> </ul> <p>These social features create a familiar yet enhanced experience that leverages blockchain technology to provide true content ownership and direct creator monetization.</p> <p>Next: Learn about Wallet Integration to understand how Cardano wallets power the platform.</p>"},{"location":"features/token-ecosystem/","title":"Token Ecosystem","text":"<p>Proof of Post seamlessly integrates Cardano's rich token ecosystem, making it easy to discover, discuss, and interact with tokens directly within the social media experience.</p>"},{"location":"features/token-ecosystem/#token-discovery","title":"\ud83d\udd0d Token Discovery","text":""},{"location":"features/token-ecosystem/#comprehensive-token-database","title":"Comprehensive Token Database","text":"<p>The platform maintains an extensive database of Cardano tokens with: - Token Metadata: Names, tickers, descriptions, and images - Policy Information: Policy IDs and asset names - Holder Statistics: Number of holders and distribution - Price Data: Real-time pricing via DexHunter API - Trading Volume: 24h volume and market activity - Social Metrics: Mention frequency and community engagement</p>"},{"location":"features/token-ecosystem/#search-discovery","title":"Search &amp; Discovery","text":"<ul> <li>Token Search: Find tokens by ticker, name, or policy ID</li> <li>Trending Tokens: Discover popular tokens based on mentions</li> <li>New Listings: Recently added tokens to the ecosystem</li> <li>Category Filtering: Browse by token type (utility, meme, governance)</li> <li>Watchlist: Follow your favorite tokens for updates</li> </ul>"},{"location":"features/token-ecosystem/#token-profiles","title":"\ud83d\udcca Token Profiles","text":""},{"location":"features/token-ecosystem/#comprehensive-token-pages","title":"Comprehensive Token Pages","text":"<p>Each token gets a dedicated profile page featuring:</p>"},{"location":"features/token-ecosystem/#basic-information","title":"Basic Information","text":"<ul> <li>Token Name &amp; Ticker: Official project identification</li> <li>Token Logo: High-resolution project branding</li> <li>Description: Project overview and use case</li> <li>Total Supply: Maximum token supply information</li> <li>Circulating Supply: Currently available tokens</li> </ul>"},{"location":"features/token-ecosystem/#market-data","title":"Market Data","text":"<ul> <li>Current Price: Real-time price in ADA and USD</li> <li>24h Change: Price movement percentage</li> <li>Market Cap: Total market valuation</li> <li>Trading Volume: 24-hour trading activity</li> <li>Price Charts: Historical price performance</li> </ul>"},{"location":"features/token-ecosystem/#social-integration","title":"Social Integration","text":"<ul> <li>Mention Feed: All posts mentioning the token</li> <li>Community Stats: Follower count and engagement</li> <li>Official Links: Website, Twitter, Discord, Telegram</li> <li>Holder Analysis: Top holders and distribution charts</li> </ul>"},{"location":"features/token-ecosystem/#token-mentions","title":"\ud83d\udcac Token Mentions","text":""},{"location":"features/token-ecosystem/#automatic-token-linking","title":"Automatic Token Linking","text":"<p>When users mention tokens in posts using the <code>$TOKEN</code> format: - Automatic Detection: Platform recognizes token mentions - Clickable Links: Mentions become links to token profiles - Real-time Validation: Verify token exists in the database - Price Display: Show current price on hover - Trending Impact: Mentions contribute to trending calculations</p>"},{"location":"features/token-ecosystem/#mention-analytics","title":"Mention Analytics","text":"<ul> <li>Mention Frequency: Track how often tokens are discussed</li> <li>Sentiment Analysis: Positive/negative mention tracking</li> <li>Influential Mentions: Posts from verified or high-reputation users</li> <li>Mention History: Historical mention trends and patterns</li> </ul>"},{"location":"features/token-ecosystem/#price-integration","title":"\ud83d\udcc8 Price Integration","text":""},{"location":"features/token-ecosystem/#real-time-price-data","title":"Real-time Price Data","text":"<ul> <li>DexHunter API Integration: Reliable price feeds from Cardano DEXs</li> <li>Multiple Price Sources: Aggregated data for accuracy</li> <li>Price Alerts: Notify users of significant price movements</li> <li>Historical Charts: Price history with various timeframes</li> <li>Volume Analysis: Trading volume trends and patterns</li> </ul>"},{"location":"features/token-ecosystem/#price-display-features","title":"Price Display Features","text":"<ul> <li>Inline Prices: Show current price next to token mentions</li> <li>Price Change Indicators: Color-coded price movement</li> <li>Portfolio Tracking: Track value of tokens you hold</li> <li>Watchlist Prices: Monitor prices of followed tokens</li> <li>Price Notifications: Alerts for significant price changes</li> </ul>"},{"location":"features/token-ecosystem/#token-interactions","title":"\ud83d\udcb0 Token Interactions","text":""},{"location":"features/token-ecosystem/#tipping-system","title":"Tipping System","text":"<ul> <li>Multi-Token Tipping: Tip creators with any supported token</li> <li>Custom Amounts: Set specific tip amounts</li> <li>Tip History: Track tips sent and received</li> <li>Popular Tip Tokens: See which tokens are commonly used for tips</li> <li>Tip Leaderboards: Top tippers and recipients</li> </ul>"},{"location":"features/token-ecosystem/#trading-integration","title":"Trading Integration","text":"<ul> <li>Swap Widget: Direct token trading within the platform</li> <li>DEX Integration: Connect to popular Cardano DEXs</li> <li>Trading Pairs: Discover available trading pairs</li> <li>Liquidity Information: Pool depth and trading fees</li> <li>Trade History: Track your trading activity</li> </ul>"},{"location":"features/token-ecosystem/#token-communities","title":"\ud83c\udfaf Token Communities","text":""},{"location":"features/token-ecosystem/#community-features","title":"Community Features","text":"<ul> <li>Token-Specific Feeds: Dedicated feeds for each token's mentions</li> <li>Community Moderators: Verified community representatives</li> <li>Official Announcements: Highlighted posts from project teams</li> <li>Community Guidelines: Token-specific posting rules</li> <li>Event Calendar: Upcoming project milestones and events</li> </ul>"},{"location":"features/token-ecosystem/#engagement-tools","title":"Engagement Tools","text":"<ul> <li>Token Holders: Verify token ownership for exclusive content</li> <li>Holder Verification: Prove token holdings for credibility</li> <li>Community Polls: Token holder voting on proposals</li> <li>AMA Sessions: Ask Me Anything with project founders</li> <li>Community Challenges: Engagement campaigns and contests</li> </ul>"},{"location":"features/token-ecosystem/#watchlist-portfolio","title":"\ud83d\udcf1 Watchlist &amp; Portfolio","text":""},{"location":"features/token-ecosystem/#personal-watchlist","title":"Personal Watchlist","text":"<ul> <li>Token Following: Follow tokens for updates and news</li> <li>Custom Lists: Create themed token collections</li> <li>Portfolio Tracking: Monitor your token holdings</li> <li>Performance Metrics: Track gains/losses over time</li> <li>Rebalancing Alerts: Notifications for portfolio changes</li> </ul>"},{"location":"features/token-ecosystem/#portfolio-features","title":"Portfolio Features","text":"<ul> <li>Automatic Detection: Detect tokens in connected wallets</li> <li>Portfolio Value: Total portfolio worth in ADA/USD</li> <li>Asset Allocation: Pie charts showing token distribution</li> <li>Performance History: Track portfolio performance over time</li> <li>Tax Reporting: Export data for tax calculations</li> </ul>"},{"location":"features/token-ecosystem/#token-alerts","title":"\ud83d\udd14 Token Alerts","text":""},{"location":"features/token-ecosystem/#price-alerts","title":"Price Alerts","text":"<ul> <li>Price Targets: Notify when tokens reach specific prices</li> <li>Percentage Changes: Alerts for significant price movements</li> <li>Volume Spikes: Notifications for unusual trading activity</li> <li>New Listings: Alerts when tokens are newly listed</li> <li>Delisting Warnings: Notifications for tokens being removed</li> </ul>"},{"location":"features/token-ecosystem/#social-alerts","title":"Social Alerts","text":"<ul> <li>Mention Spikes: When tokens are suddenly trending</li> <li>Influencer Posts: When notable users mention specific tokens</li> <li>Community Milestones: Holder count or volume achievements</li> <li>Project Updates: Official announcements from project teams</li> <li>Regulatory News: Important regulatory developments</li> </ul>"},{"location":"features/token-ecosystem/#developer-tools","title":"\ud83d\udee0\ufe0f Developer Tools","text":""},{"location":"features/token-ecosystem/#token-api","title":"Token API","text":"<pre><code>// Get token information\nconst tokenInfo = await fetch('/api/tokens/search?q=ADA');\n\n// Get token price\nconst priceData = await fetch('/api/tokens/price/ada');\n\n// Get token mentions\nconst mentions = await fetch('/api/tokens/mentions/ada?limit=50');\n\n// Track token in watchlist\nawait fetch('/api/tokens/watch', {\n  method: 'POST',\n  body: JSON.stringify({ tokenId: 'ada' })\n});\n</code></pre>"},{"location":"features/token-ecosystem/#integration-features","title":"Integration Features","text":"<ul> <li>Token Widgets: Embeddable price and info widgets</li> <li>Price Feeds: Real-time WebSocket price updates</li> <li>Historical Data: Access to historical price and volume data</li> <li>Metadata API: Token information and imagery</li> <li>Social Metrics: Mention counts and sentiment data</li> </ul>"},{"location":"features/token-ecosystem/#visual-integration","title":"\ud83c\udfa8 Visual Integration","text":""},{"location":"features/token-ecosystem/#token-branding","title":"Token Branding","text":"<ul> <li>Token Logos: High-quality logos throughout the platform</li> <li>Color Schemes: Token-specific color theming</li> <li>Brand Guidelines: Consistent token presentation</li> <li>Icon Sets: Token icons for various contexts</li> <li>Badge Systems: Achievement badges for token communities</li> </ul>"},{"location":"features/token-ecosystem/#ui-components","title":"UI Components","text":"<ul> <li>Token Cards: Standardized token information display</li> <li>Price Tickers: Scrolling price displays</li> <li>Portfolio Widgets: Personal holdings visualization</li> <li>Trading Charts: Interactive price charts</li> <li>Trend Indicators: Visual trend and momentum indicators</li> </ul> <p>The token ecosystem integration makes Proof of Post the premier destination for Cardano token communities, combining social media with comprehensive token information and trading capabilities.</p> <p>Next: Learn about Content Monetization to discover how creators can earn directly from their content.</p>"},{"location":"features/wallet-integration/","title":"Wallet Integration","text":"<p>Proof of Post's wallet integration is the foundation that enables true decentralized social media. Instead of traditional username/password systems, the platform uses Cardano wallets for authentication, identity, and payments.</p>"},{"location":"features/wallet-integration/#supported-wallets","title":"\ud83d\udd17 Supported Wallets","text":""},{"location":"features/wallet-integration/#cip-30-compatible-wallets","title":"CIP-30 Compatible Wallets","text":"<p>Proof of Post supports these major Cardano wallets that implement the CIP-30 standard:</p> <ul> <li>Eternl - Feature-rich wallet with advanced capabilities</li> <li>Lace - IOG's official light wallet</li> <li>Vespr - Community-focused wallet</li> </ul>"},{"location":"features/wallet-integration/#browser-extension-detection","title":"Browser Extension Detection","text":"<p>The platform automatically detects installed wallets and presents connection options:</p> <pre><code>// Automatic wallet detection\nconst availableWallets = Object.keys(window.cardano || {})\n  .filter(key =&gt; window.cardano[key]?.isEnabled !== undefined);\n</code></pre>"},{"location":"features/wallet-integration/#authentication-process","title":"\ud83d\udd10 Authentication Process","text":""},{"location":"features/wallet-integration/#wallet-connection-flow","title":"Wallet Connection Flow","text":"<ol> <li>Wallet Detection: Platform scans for available CIP-30 wallets</li> <li>User Selection: Choose your preferred wallet from available options</li> <li>Permission Request: Wallet asks for connection permission</li> <li>Address Retrieval: Platform gets your wallet's receive address</li> <li>Challenge Generation: Server creates a unique signing challenge</li> <li>Message Signing: Wallet signs the challenge using CIP-8 standard</li> <li>Verification: Server verifies the signature against your address</li> <li>Session Creation: JWT token issued for authenticated sessions</li> </ol>"},{"location":"features/wallet-integration/#security-features","title":"Security Features","text":"<ul> <li>Challenge-Response Authentication: Prevents replay attacks</li> <li>Signature Verification: Cryptographic proof of wallet ownership</li> <li>Session Binding: JWT tokens tied to specific wallet addresses</li> <li>Automatic Expiry: Sessions expire for security</li> <li>Multi-Device Support: Connect the same wallet on multiple devices</li> </ul>"},{"location":"features/wallet-integration/#identity-management","title":"\ud83d\udc64 Identity Management","text":""},{"location":"features/wallet-integration/#dual-identity-system","title":"Dual Identity System","text":""},{"location":"features/wallet-integration/#platform-usernames-username","title":"Platform Usernames (<code>@username</code>)","text":"<ul> <li>User-chosen handles for easy identification</li> <li>Availability checking to ensure uniqueness</li> <li>Profile customization with bios and images</li> <li>Social graph building through follower relationships</li> </ul>"},{"location":"features/wallet-integration/#ada-handles-handle","title":"ADA Handles (<code>$handle</code>)","text":"<ul> <li>On-chain verification through Blockfrost API</li> <li>Automatic detection when wallets connect</li> <li>Verified badge display for confirmed handles</li> <li>Handle-based profile URLs (e.g., <code>/profile/$myhandle</code>)</li> </ul>"},{"location":"features/wallet-integration/#profile-information","title":"Profile Information","text":"<p>Your wallet connection automatically populates: - Wallet Address: Your primary Cardano address - ADA Balance: Current ADA holdings display - Asset Holdings: All tokens in your wallet - ADA Handle: If you own one, it's automatically verified</p>"},{"location":"features/wallet-integration/#financial-integration","title":"\ud83d\udcb0 Financial Integration","text":""},{"location":"features/wallet-integration/#balance-display","title":"Balance Display","text":"<ul> <li>Real-time ADA balance shown in your profile</li> <li>Asset portfolio display for all Cardano tokens</li> <li>USD value conversion for better understanding</li> <li>Balance history tracking over time</li> </ul>"},{"location":"features/wallet-integration/#transaction-capabilities","title":"Transaction Capabilities","text":"<ul> <li>Tip Payments: Send ADA or tokens to creators</li> <li>Content Purchases: Buy access to paid media</li> <li>Transaction Signing: Secure approval for all payments</li> <li>Payment Verification: Blockchain confirmation of transactions</li> </ul>"},{"location":"features/wallet-integration/#multi-asset-support","title":"Multi-Asset Support","text":"<ul> <li>Native Tokens: Support for all Cardano native assets</li> <li>NFT Display: Show your NFT collection in profiles</li> <li>Token Tipping: Tip creators with any supported token</li> <li>Asset Metadata: Automatic token information lookup</li> </ul>"},{"location":"features/wallet-integration/#security-privacy","title":"\ud83d\udee1\ufe0f Security &amp; Privacy","text":""},{"location":"features/wallet-integration/#cryptographic-security","title":"Cryptographic Security","text":"<ul> <li>CIP-8 Message Signing: Industry standard for wallet authentication</li> <li>Address Verification: Prevent wallet address spoofing</li> <li>Signature Validation: Every signed message is cryptographically verified</li> <li>Session Security: JWT tokens with wallet address binding</li> </ul>"},{"location":"features/wallet-integration/#privacy-protection","title":"Privacy Protection","text":"<ul> <li>Optional Address Display: Choose whether to show your wallet address</li> <li>Transaction Privacy: Only you can see your full transaction history</li> <li>Selective Sharing: Control what wallet information is public</li> <li>No Seed Phrase Storage: Platform never accesses your private keys</li> </ul>"},{"location":"features/wallet-integration/#post-signing","title":"Post Signing","text":"<ul> <li>Optional Post Signatures: Cryptographically sign your posts</li> <li>Verification Badges: Signed posts show verification indicators</li> <li>Authenticity Proof: Immutable proof of post authorship</li> <li>Anti-Impersonation: Prevent fake posts attributed to your wallet</li> </ul>"},{"location":"features/wallet-integration/#session-management","title":"\ud83d\udd04 Session Management","text":""},{"location":"features/wallet-integration/#persistent-sessions","title":"Persistent Sessions","text":"<ul> <li>Auto-Reconnection: Automatic wallet reconnection when available</li> <li>Session Restoration: Restore authenticated state after browser restart</li> <li>Multi-Tab Support: Maintain session across browser tabs</li> <li>Background Sync: Keep wallet state synchronized</li> </ul>"},{"location":"features/wallet-integration/#session-controls","title":"Session Controls","text":"<ul> <li>Manual Disconnect: Explicitly disconnect wallet when desired</li> <li>Session Timeout: Automatic expiry for security</li> <li>Refresh Tokens: Seamless session renewal</li> <li>Device Management: See all connected devices</li> </ul>"},{"location":"features/wallet-integration/#technical-implementation","title":"\ud83d\udd27 Technical Implementation","text":""},{"location":"features/wallet-integration/#cip-30-integration","title":"CIP-30 Integration","text":"<pre><code>// Wallet connection example\nconst connectWallet = async (walletName: string) =&gt; {\n  try {\n    const wallet = await window.cardano[walletName].enable();\n    const api = await wallet.getApi();\n\n    // Get wallet address\n    const addresses = await api.getUsedAddresses();\n    const address = addresses[0];\n\n    // Request authentication challenge\n    const challenge = await fetch('/api/auth/challenge', {\n      method: 'POST',\n      body: JSON.stringify({ address })\n    });\n\n    // Sign challenge\n    const signature = await api.signData(\n      Buffer.from(challenge).toString('hex'),\n      Buffer.from(address).toString('hex')\n    );\n\n    // Verify and authenticate\n    const auth = await fetch('/api/auth/verify', {\n      method: 'POST',\n      body: JSON.stringify({ address, signature, challenge })\n    });\n\n    return auth.json();\n  } catch (error) {\n    console.error('Wallet connection failed:', error);\n  }\n};\n</code></pre>"},{"location":"features/wallet-integration/#error-handling","title":"Error Handling","text":"<ul> <li>Connection Failures: Graceful handling of wallet connection issues</li> <li>Network Errors: Retry mechanisms for network problems</li> <li>User Cancellation: Proper handling when users cancel operations</li> <li>Wallet Not Found: Clear messaging for missing wallets</li> </ul>"},{"location":"features/wallet-integration/#advanced-features","title":"\ud83d\ude80 Advanced Features","text":""},{"location":"features/wallet-integration/#wallet-switching","title":"Wallet Switching","text":"<ul> <li>Multi-Wallet Support: Switch between different connected wallets</li> <li>Profile Association: Link multiple wallets to the same profile</li> <li>Wallet Verification: Verify ownership of multiple addresses</li> <li>Primary Wallet: Designate main wallet for transactions</li> </ul>"},{"location":"features/wallet-integration/#hardware-wallet-support","title":"Hardware Wallet Support","text":"<ul> <li>Ledger Integration: Full support for Ledger hardware wallets</li> <li>Trezor Compatibility: Works with Trezor devices</li> <li>Enhanced Security: Hardware wallet signing for maximum security</li> <li>Transaction Approval: Clear transaction details for approval</li> </ul>"},{"location":"features/wallet-integration/#developer-tools","title":"Developer Tools","text":"<ul> <li>Wallet State Debugging: Tools for developers to debug wallet integration</li> <li>Transaction Simulation: Test transactions without spending real ADA</li> <li>Network Selection: Switch between mainnet and testnet</li> <li>API Monitoring: Track wallet API calls and responses</li> </ul> <p>The wallet integration makes Proof of Post truly decentralized by eliminating traditional authentication while providing enhanced security and direct financial capabilities.</p> <p>Next: Explore the Token Ecosystem to see how Cardano tokens are integrated throughout the platform.</p>"},{"location":"getting-started/presale/","title":"$POST Token Presale","text":"<p>Join the exclusive presale for the $POST token and be among the first to own a piece of the Proof of Post ecosystem. Security guaranteed by Orca Labs.</p>"},{"location":"getting-started/presale/#presale-overview","title":"\ud83c\udfaf Presale Overview","text":"<ul> <li>Token Symbol: $POST</li> <li>Total Supply: 1,000,000,000 $POST</li> <li>Presale Allocation: 500,000,000 $POST (50% of total supply)</li> <li>Minimum Purchase: 100 ADA</li> <li>Presale Period: September 27, 2025 12:00 UTC \u2192 October 3, 2025 12:59 UTC</li> <li>Presale Address: <code>addr1q8xd2trvdsalrlnvmzkuqm97zyzxaulzfcn7xft5ydtfjxnm4n8qyfc5srfl7pfn8ucngtma8xzlxf4rv9k009xy4twq3jpahx</code></li> </ul>"},{"location":"getting-started/presale/#funding-goals","title":"\ud83d\udcb0 Funding Goals","text":"<ul> <li>Soft Cap: 20,000 ADA (Full refunds if not met)</li> <li>Hard Cap: 195,000 ADA (Presale ends when reached)</li> <li>Security Guarantee: Presale backed and secured by Orca Labs</li> </ul>"},{"location":"getting-started/presale/#tiered-pricing-structure","title":"\ud83d\udcca Tiered Pricing Structure","text":"<p>The presale features a multi-tier pricing system with decreasing token allocation rates as funding increases:</p> <p></p>"},{"location":"getting-started/presale/#tier-breakdown","title":"Tier Breakdown","text":""},{"location":"getting-started/presale/#tier-0-allowlist-best-value","title":"Tier 0 (Allowlist) - Best Value","text":"<ul> <li>Rate: 3,600 tokens per ADA</li> <li>Allocation: 3,000 ADA capacity</li> <li>Total Tokens: 10,800,000 $POST</li> </ul>"},{"location":"getting-started/presale/#tier-1-high-value","title":"Tier 1 - High Value","text":"<ul> <li>Rate: 3,200 tokens per ADA</li> <li>Allocation: 7,000 ADA capacity</li> <li>Total Tokens: 22,400,000 $POST</li> </ul>"},{"location":"getting-started/presale/#tier-2-good-value","title":"Tier 2 - Good Value","text":"<ul> <li>Rate: 3,000 tokens per ADA  </li> <li>Allocation: 10,000 ADA capacity</li> <li>Total Tokens: 30,000,000 $POST</li> </ul>"},{"location":"getting-started/presale/#tier-3-standard-rate","title":"Tier 3 - Standard Rate","text":"<ul> <li>Rate: 2,800 tokens per ADA</li> <li>Allocation: 42,000 ADA capacity</li> <li>Total Tokens: 117,600,000 $POST</li> </ul>"},{"location":"getting-started/presale/#tier-4-final-last-opportunity","title":"Tier 4 (Final) - Last Opportunity","text":"<ul> <li>Rate: 2,400 tokens per ADA</li> <li>Allocation: 133,000 ADA capacity  </li> <li>Total Tokens: 319,200,000 $POST</li> </ul>"},{"location":"getting-started/presale/#cumulative-progress","title":"Cumulative Progress","text":""},{"location":"getting-started/presale/#token-distribution","title":"Token Distribution","text":"<ul> <li>Presale: 50% (500,000,000 tokens)</li> <li>Liquidity Pool: 20% (200,000,000 tokens)</li> <li>CEX Listings: 5% (50,000,000 tokens)</li> <li>Team &amp; Development: 25% (250,000,000 tokens)</li> </ul>"},{"location":"getting-started/presale/#launch-details","title":"\ud83d\ude80 Launch Details","text":"<ul> <li>Launch Price: 2,300 tokens per ADA (Higher than final presale tier for instant profit)</li> <li>Initial Liquidity: 200,000,000 tokens (20%) + 86,957 ADA</li> <li>Profit Potential: Up to +50% profit from Tier 0 rates at launch</li> <li>CEX Funding: 5% of total supply reserved for exchange listings</li> </ul>"},{"location":"getting-started/presale/#profit-potential-analysis","title":"\ud83d\udcc8 Profit Potential Analysis","text":"<p>Based on current tier rates vs launch price (2,300 tokens/ADA):</p> <ul> <li>Tier 0 (3,600/ADA): +56.5% profit at launch</li> <li>Tier 1 (3,200/ADA): +39.1% profit at launch</li> <li>Tier 2 (3,000/ADA): +30.4% profit at launch</li> <li>Tier 3 (2,800/ADA): +21.7% profit at launch</li> <li>Tier 4 (2,400/ADA): +4.3% profit at launch</li> </ul> <p>Note: Earlier tiers offer significantly higher profit potential due to better token rates compared to the launch price.</p>"},{"location":"getting-started/presale/#how-to-participate","title":"\ud83d\udd17 How to Participate","text":"<ol> <li>Visit Presale Page: Access the official presale interface</li> <li>Connect Wallet: Choose from Eternl, Lace, or Vespr</li> <li>Send ADA: Minimum 100 ADA to participate</li> <li>Receive Allocation: Tokens distributed automatically based on current tier</li> <li>Track Progress: Monitor real-time presale progress and tier status</li> </ol>"},{"location":"getting-started/presale/#supported-wallets","title":"\ud83d\udcb3 Supported Wallets","text":"<ul> <li>Eternl: Advanced browser extension with hardware wallet support</li> <li>Lace: IOG's official wallet - popular choice</li> <li>Vespr: Mobile-friendly community wallet</li> </ul>"},{"location":"getting-started/presale/#security-compliance","title":"\ud83d\udee1\ufe0f Security &amp; Compliance","text":""},{"location":"getting-started/presale/#security-guarantees","title":"Security Guarantees","text":"<ul> <li>Orca Labs Backed: Professional security guarantee from established Cardano development company</li> <li>Smart Contract Audited: Presale contract thoroughly reviewed for security vulnerabilities</li> <li>On-Chain Transparency: All transactions publicly verifiable on Cardano blockchain</li> <li>Refund Protection: Automatic refunds if soft cap (20,000 ADA) not reached</li> </ul>"},{"location":"getting-started/presale/#participation-requirements","title":"Participation Requirements","text":"<ul> <li>Personal Wallets Only: Do NOT send from exchanges - only from personal wallets</li> <li>Minimum Contribution: 100 ADA required to participate</li> <li>Supported Networks: Cardano Mainnet only</li> <li>Transaction Records: Keep your TX hash for potential refund processing</li> </ul>"},{"location":"getting-started/presale/#important-information","title":"\u26a0\ufe0f Important Information","text":""},{"location":"getting-started/presale/#investment-risks","title":"Investment Risks","text":"<ul> <li>Cryptocurrency investments carry inherent financial risks</li> <li>Token values may fluctuate significantly after launch</li> <li>Regulatory changes could impact the project</li> <li>Early-stage project with associated development risks</li> </ul>"},{"location":"getting-started/presale/#technical-requirements","title":"Technical Requirements","text":"<ul> <li>Compatible Cardano wallet (Eternl, Lace, or Vespr)</li> <li>Sufficient ADA balance for contribution + transaction fees</li> <li>Stable internet connection for wallet operations</li> <li>Basic understanding of Cardano wallet operations</li> </ul>"},{"location":"getting-started/presale/#get-started-now","title":"\ud83c\udfaf Get Started Now","text":""},{"location":"getting-started/presale/#step-by-step-process","title":"Step-by-Step Process","text":"<ol> <li>Prepare Your Wallet</li> <li>Install Eternl, Lace, or Vespr wallet</li> <li>Fund with ADA (minimum 100 + fees)</li> <li> <p>Ensure wallet is fully synced</p> </li> <li> <p>Access Presale</p> </li> <li>Visit the official presale interface</li> <li>Verify you're on the correct domain</li> <li> <p>Check presale status and current tier</p> </li> <li> <p>Participate</p> </li> <li>Connect your wallet securely</li> <li>Enter contribution amount (min 100 ADA)</li> <li> <p>Confirm transaction and receive allocation</p> </li> <li> <p>Track &amp; Verify</p> </li> <li>Monitor presale progress dashboard</li> <li>Save transaction hash for records</li> <li>Track tier progression in real-time</li> </ol>"},{"location":"getting-started/presale/#support-resources","title":"\ud83d\udcde Support &amp; Resources","text":""},{"location":"getting-started/presale/#official-channels","title":"Official Channels","text":"<ul> <li>Website: proofofpost.io</li> <li>Twitter/X: @ProofOfPost_io</li> <li>Community: Join our Discord for real-time support and updates</li> </ul>"},{"location":"getting-started/presale/#documentation","title":"Documentation","text":"<ul> <li>Tokenomics: Detailed token distribution and utility</li> <li>Revenue Share: Platform profit sharing mechanisms</li> <li>Roadmap: Development timeline and milestones</li> </ul>"},{"location":"getting-started/presale/#join-the-future-of-on-chain-social-media","title":"\ud83d\ude80 Join the Future of On-Chain Social Media","text":"<p>The $POST presale represents your opportunity to be part of the next evolution in social media - where creators own their content, earn directly from their audience, and participate in a truly decentralized platform built on Cardano.</p> <p>Secure your allocation today and become a founding member of the Proof of Post ecosystem!</p>"},{"location":"getting-started/the-post-token/","title":"The POST Token","text":""},{"location":"getting-started/the-post-token/#the-post-token","title":"The $POST Token","text":"<p>The $POST token is the native utility token of the Utxo Maestro Protocol, designed to power a revolutionary ecosystem on Cardano. Built with innovative tokenomics and value-accrual mechanisms, $POST serves as the cornerstone of our decentralized platform.</p>"},{"location":"getting-started/the-post-token/#token-overview","title":"Token Overview","text":"<ul> <li>Name: POST Token  </li> <li>Symbol: $POST</li> <li>Blockchain: Cardano</li> <li>Total Supply: [Total Supply]</li> <li>Launch: [Launch Date]</li> </ul>"},{"location":"getting-started/the-post-token/#core-utility","title":"Core Utility","text":"<p>The $POST token provides multiple utilities within the Utxo Maestro ecosystem:</p>"},{"location":"getting-started/the-post-token/#platform-access","title":"\ud83c\udfb0 Platform Access","text":"<ul> <li>Access to premium platform features</li> <li>Exclusive content and functionality</li> <li>Enhanced social media capabilities</li> </ul>"},{"location":"getting-started/the-post-token/#governance-rights","title":"\ud83c\udfdb\ufe0f Governance Rights","text":"<ul> <li>Vote on protocol upgrades and changes</li> <li>Participate in treasury decisions</li> <li>Propose new features and improvements</li> </ul>"},{"location":"getting-started/the-post-token/#staking-rewards","title":"\ud83d\udcb0 Staking &amp; Rewards","text":"<ul> <li>Stake tokens to earn passive rewards</li> <li>Participate in network security</li> <li>Access to exclusive staking pools</li> </ul>"},{"location":"getting-started/the-post-token/#fee-discounts","title":"\ud83d\udcb8 Fee Discounts","text":"<ul> <li>Reduced transaction fees across the platform</li> <li>Priority processing for token holders</li> <li>Exclusive access to new features</li> </ul>"},{"location":"getting-started/the-post-token/#value-accrual-mechanics","title":"Value-Accrual Mechanics","text":"<p>The $POST token is designed with deflationary mechanisms to create sustainable value:</p>"},{"location":"getting-started/the-post-token/#token-burns","title":"\ud83d\udd25 Token Burns","text":"<ul> <li>Platform Revenue: Percentage of platform profits burned regularly</li> <li>Transaction Fees: Platform fees contribute to burn mechanism  </li> <li>Buyback Program: Automated market purchases and burns</li> </ul>"},{"location":"getting-started/the-post-token/#revenue-sharing","title":"\ud83d\udcc8 Revenue Sharing","text":"<ul> <li>Holders benefit from platform success</li> <li>Multiple revenue streams feed back to token value</li> <li>Sustainable long-term growth model</li> </ul>"},{"location":"getting-started/the-post-token/#supply-control","title":"\ud83d\udd12 Supply Control","text":"<ul> <li>Limited total supply with deflationary pressure</li> <li>Vesting schedules prevent sudden supply shocks</li> <li>Community-controlled emission rates</li> </ul>"},{"location":"getting-started/the-post-token/#getting-started","title":"Getting Started","text":"<p>Ready to join the Utxo Maestro ecosystem?</p> <ol> <li>Participate in Presale: Get early access to $POST tokens</li> <li>Join Community: Connect with other holders and builders  </li> <li>Stake Tokens: Start earning rewards immediately</li> <li>Use Platform: Experience the full ecosystem</li> </ol> <p>The $POST token represents ownership in the future of decentralized finance on Cardano. Join us in building the next generation of blockchain applications.</p>"},{"location":"platform/key-features/","title":"Key Features","text":"<p>Proof of Post combines the best of traditional social media with cutting-edge blockchain technology. Here are the platform's core capabilities:</p>"},{"location":"platform/key-features/#wallet-based-authentication","title":"\ud83d\udd10 Wallet-Based Authentication","text":""},{"location":"platform/key-features/#multi-wallet-support","title":"Multi-Wallet Support","text":"<ul> <li>Eternl, Lace, Vespr - Connect with your preferred Cardano wallet</li> <li>CIP-30 standard compliance for seamless integration</li> <li>Signature-based authentication using CIP-8 message signing</li> <li>Session management with secure JWT tokens</li> <li>Automatic reconnection when wallets are available</li> </ul>"},{"location":"platform/key-features/#dual-identity-system","title":"Dual Identity System","text":"<ul> <li>Platform Usernames (<code>@username</code>) - Choose your own handle</li> <li>ADA Handles (<code>$handle</code>) - Verified on-chain Cardano identities</li> <li>Automatic detection of ADA handles when connecting wallets</li> <li>Profile flexibility - URLs work with username, handle, or wallet address</li> </ul>"},{"location":"platform/key-features/#social-media-features","title":"\ud83d\udcf1 Social Media Features","text":""},{"location":"platform/key-features/#content-creation","title":"Content Creation","text":"<ul> <li>Text Posts with 280 character limit</li> <li>Image Uploads with IPFS storage for decentralization</li> <li>GIF Support via Giphy integration</li> <li>Media URL Detection with automatic embedding</li> <li>Hashtag Support (<code>#topic</code>) for topic discovery</li> <li>Token Mentions (<code>$TOKEN</code>) with automatic linking</li> <li>Content Linkification - URLs, mentions, and hashtags become clickable</li> </ul>"},{"location":"platform/key-features/#social-interactions","title":"Social Interactions","text":"<ul> <li>Rich Reactions: Like \u2764\ufe0f, Rocket \ud83d\ude80, Diamond \ud83d\udc8e, Degen \ud83e\udd21</li> <li>Retweets/Boosts with optional commentary</li> <li>Comments and Replies on all posts</li> <li>Bookmarking for saving posts</li> <li>Tipping System in ADA and other tokens</li> <li>Follow/Unfollow users to curate your feed</li> </ul>"},{"location":"platform/key-features/#discovery-navigation","title":"Discovery &amp; Navigation","text":"<ul> <li>Virtualized Home Feed with smooth 60fps infinite scroll</li> <li>Hot Topics showing trending hashtags</li> <li>Advanced Search:</li> <li>Search posts by content</li> <li>Find users by username/handle/address</li> <li>Discover topics and hashtags</li> <li>Search tokens by ticker/name</li> <li>Topic-Based Filtering for focused discussions</li> <li>Token-Specific Feeds for posts mentioning specific assets</li> </ul>"},{"location":"platform/key-features/#cardano-integration","title":"\ud83d\udcb0 Cardano Integration","text":""},{"location":"platform/key-features/#native-crypto-features","title":"Native Crypto Features","text":"<ul> <li>Balance Display showing your ADA holdings</li> <li>Asset Holdings for all your Cardano tokens</li> <li>Transaction Signing for posts and payments</li> <li>Multi-Asset Support beyond just ADA</li> <li>Price Tracking with real-time data</li> <li>Trading Widget integration for token swaps</li> </ul>"},{"location":"platform/key-features/#token-ecosystem","title":"Token Ecosystem","text":"<ul> <li>Token Discovery with comprehensive search</li> <li>Price Tracking via DexHunter API integration</li> <li>Token Profiles with metadata, links, and holder statistics</li> <li>Watchlist Functionality for following your favorite tokens</li> <li>Automatic Token Linking when mentioned in posts</li> </ul>"},{"location":"platform/key-features/#content-monetization","title":"\ud83d\udc8e Content Monetization","text":""},{"location":"platform/key-features/#paid-media-system","title":"Paid Media System","text":"<ul> <li>Monetize Images/Videos - Set custom prices in ADA</li> <li>Blurred Previews with unlock buttons for paid content</li> <li>Blockchain Payment Verification for secure transactions</li> <li>Content Watermarking for purchased media</li> <li>Signed URLs for secure content delivery</li> </ul>"},{"location":"platform/key-features/#creator-economy","title":"Creator Economy","text":"<ul> <li>Direct Tipping from readers to creators</li> <li>No Platform Fees on direct payments</li> <li>Token-Gated Content possibilities</li> <li>Cryptographic Ownership proof for all content</li> </ul>"},{"location":"platform/key-features/#security-verification","title":"\ud83d\udee1\ufe0f Security &amp; Verification","text":""},{"location":"platform/key-features/#cryptographic-security","title":"Cryptographic Security","text":"<ul> <li>CIP-8 Message Signing for post authenticity</li> <li>Signature Verification with on-chain validation</li> <li>Wallet Address Verification to prevent impersonation</li> <li>Session Security with JWT and wallet matching</li> <li>Content Integrity through cryptographic signatures</li> </ul>"},{"location":"platform/key-features/#verification-system","title":"Verification System","text":"<ul> <li>Signature Badges showing cryptographically verified posts</li> <li>ADA Handle Verification for confirmed on-chain identities</li> <li>Wallet Ownership Proof preventing fake accounts</li> </ul>"},{"location":"platform/key-features/#user-experience","title":"\ud83c\udfa8 User Experience","text":""},{"location":"platform/key-features/#modern-interface","title":"Modern Interface","text":"<ul> <li>Dark/Light Theme support for user preference</li> <li>Compact Mode for information-dense viewing</li> <li>Responsive Design optimized for mobile and desktop</li> <li>Smooth Animations with Framer Motion</li> <li>Toast Notifications for instant feedback</li> <li>Modal Overlays that preserve scroll position</li> </ul>"},{"location":"platform/key-features/#performance-optimizations","title":"Performance Optimizations","text":"<ul> <li>Virtualized Feeds for smooth scrolling with thousands of posts</li> <li>Optimistic Updates for instant UI feedback</li> <li>Client-Side Caching with TTL for faster loading</li> <li>Prefetching with Next.js for seamless navigation</li> <li>Transform-Only Animations to avoid layout shifts</li> </ul>"},{"location":"platform/key-features/#decentralized-storage","title":"\ud83c\udf10 Decentralized Storage","text":""},{"location":"platform/key-features/#ipfs-integration","title":"IPFS Integration","text":"<ul> <li>Decentralized Media Storage - Your content isn't locked to our servers</li> <li>Content Addressing with IPFS CIDs for permanent access</li> <li>Automatic Upload with local previews during processing</li> <li>Gateway URL Generation for reliable content delivery</li> </ul>"},{"location":"platform/key-features/#analytics-insights","title":"\ud83d\udcca Analytics &amp; Insights","text":""},{"location":"platform/key-features/#user-metrics","title":"User Metrics","text":"<ul> <li>Follower/Following Counts for social proof</li> <li>Reputation System based on community interactions</li> <li>Post Engagement tracking (likes, boosts, replies)</li> <li>Token Holdings verification for credibility</li> </ul>"},{"location":"platform/key-features/#content-analytics","title":"Content Analytics","text":"<ul> <li>Reaction Counts for all interaction types</li> <li>Topic Trending to discover hot discussions</li> <li>Token Mention Frequency for market insights</li> <li>Tip Totals and payment history</li> </ul> <p>These features combine to create a social media experience that's familiar yet revolutionary - giving users true ownership of their content, identity, and economic interactions while maintaining the ease of use expected from modern platforms.</p> <p>Ready to get started? Check out our Technical Architecture to understand how it all works together.</p>"},{"location":"platform/technical-architecture/","title":"Technical Architecture","text":"<p>Proof of Post is built on a modern, scalable architecture that seamlessly integrates traditional web technologies with Cardano blockchain capabilities. Here's how the platform is constructed:</p>"},{"location":"platform/technical-architecture/#core-technology-stack","title":"\ud83c\udfd7\ufe0f Core Technology Stack","text":""},{"location":"platform/technical-architecture/#frontend-architecture","title":"Frontend Architecture","text":"<ul> <li>Next.js 14 with App Router for modern React development</li> <li>TypeScript throughout for type safety and developer experience</li> <li>Tailwind CSS for responsive, utility-first styling</li> <li>Framer Motion for smooth, performant animations</li> <li>Lucide React for consistent iconography</li> </ul>"},{"location":"platform/technical-architecture/#state-management-data","title":"State Management &amp; Data","text":"<ul> <li>Zustand with persistence for client-side state</li> <li>SQLite with Drizzle ORM for efficient data management</li> <li>JWT Authentication with wallet signature verification</li> <li>Client-side caching with TTL for optimal performance</li> </ul>"},{"location":"platform/technical-architecture/#blockchain-integration","title":"Blockchain Integration","text":"<ul> <li>Lucid Cardano for blockchain interactions</li> <li>CIP-30 Wallet Support for multi-wallet compatibility</li> <li>Blockfrost API for Cardano network data</li> <li>CIP-8 Message Signing for cryptographic verification</li> </ul>"},{"location":"platform/technical-architecture/#performance-optimizations","title":"\ud83d\udd27 Performance Optimizations","text":""},{"location":"platform/technical-architecture/#virtualized-rendering","title":"Virtualized Rendering","text":"<pre><code>// 60fps scrolling with react-virtuoso\n&lt;Virtuoso\n  data={posts}\n  itemContent={(index, post) =&gt; &lt;PostCard post={post} /&gt;}\n  overscan={5}\n  increaseViewportBy={1000}\n/&gt;\n</code></pre>"},{"location":"platform/technical-architecture/#optimistic-updates","title":"Optimistic Updates","text":"<ul> <li>Instant UI feedback before blockchain confirmation</li> <li>Rollback mechanisms for failed transactions</li> <li>Loading states with skeleton components</li> <li>Error boundaries for graceful failure handling</li> </ul>"},{"location":"platform/technical-architecture/#caching-strategy","title":"Caching Strategy","text":"<ul> <li>Feed caching with 5-minute TTL</li> <li>User profile caching with 15-minute TTL</li> <li>Token data caching with 10-minute TTL</li> <li>Image caching through IPFS gateways</li> </ul>"},{"location":"platform/technical-architecture/#database-architecture","title":"\ud83d\uddc4\ufe0f Database Architecture","text":""},{"location":"platform/technical-architecture/#core-tables-schema","title":"Core Tables Schema","text":"<pre><code>-- User identity and profiles\nusers (\n  id, wallet_address, username, ada_handle,\n  avatar_url, banner_url, bio, created_at\n)\n\n-- Content and posts\nposts (\n  id, user_id, content, signature, media_urls,\n  reaction_counts, boost_count, reply_count, created_at\n)\n\n-- Social interactions\nreactions (user_id, post_id, reaction_type, created_at)\nfollows (follower_id, following_id, created_at)\nboosts (user_id, post_id, comment, created_at)\ncomments (id, user_id, post_id, content, created_at)\nbookmarks (user_id, post_id, created_at)\n\n-- Monetization\npaid_posts (post_id, price_ada, unlock_count)\npurchases (user_id, post_id, transaction_hash, created_at)\ntips (from_user_id, to_post_id, amount, token, tx_hash)\n\n-- Content organization\ntopics (id, name, post_count, trending_score)\ntokens (id, policy_id, asset_name, ticker, metadata)\n</code></pre>"},{"location":"platform/technical-architecture/#indexing-strategy","title":"Indexing Strategy","text":"<ul> <li>Composite indexes on frequently queried combinations</li> <li>Partial indexes for active/recent content</li> <li>Full-text search on post content and user profiles</li> <li>Time-based partitioning for scalability</li> </ul>"},{"location":"platform/technical-architecture/#authentication-flow","title":"\ud83d\udd10 Authentication Flow","text":""},{"location":"platform/technical-architecture/#wallet-connection-process","title":"Wallet Connection Process","text":"<pre><code>sequenceDiagram\n    participant User\n    participant Frontend\n    participant API\n    participant Wallet\n    participant Blockchain\n\n    User-&gt;&gt;Frontend: Click \"Connect Wallet\"\n    Frontend-&gt;&gt;Wallet: Request connection (CIP-30)\n    Wallet-&gt;&gt;Frontend: Return wallet API\n    Frontend-&gt;&gt;API: Request auth challenge\n    API-&gt;&gt;Frontend: Return challenge message\n    Frontend-&gt;&gt;Wallet: Sign challenge (CIP-8)\n    Wallet-&gt;&gt;Frontend: Return signature\n    Frontend-&gt;&gt;API: Submit signature + address\n    API-&gt;&gt;Blockchain: Verify signature\n    API-&gt;&gt;Frontend: Return JWT token\n    Frontend-&gt;&gt;User: Authentication complete\n</code></pre>"},{"location":"platform/technical-architecture/#session-management","title":"Session Management","text":"<ul> <li>JWT tokens with wallet address binding</li> <li>Signature verification on sensitive operations</li> <li>Session expiry with automatic refresh</li> <li>Multi-device support with session tracking</li> </ul>"},{"location":"platform/technical-architecture/#api-architecture","title":"\ud83d\udce1 API Architecture","text":""},{"location":"platform/technical-architecture/#restful-endpoints","title":"RESTful Endpoints","text":"<pre><code>// Authentication\nPOST /api/auth/challenge     // Get signing challenge\nPOST /api/auth/verify        // Verify signature &amp; login\nPOST /api/auth/refresh       // Refresh JWT token\n\n// Content Management\nGET  /api/posts             // Get feed posts\nPOST /api/posts             // Create new post\nGET  /api/posts/:id         // Get specific post\nPOST /api/posts/:id/react   // Add reaction\nPOST /api/posts/:id/boost   // Boost/retweet post\n\n// User Management\nGET  /api/users/:id         // Get user profile\nPUT  /api/profile           // Update own profile\nGET  /api/profile/feed      // Get personalized feed\nPOST /api/profile/follow    // Follow/unfollow user\n\n// Search &amp; Discovery\nGET  /api/search           // Search posts/users/tokens\nGET  /api/topics           // Get trending topics\nGET  /api/tokens           // Get token information\n\n// Monetization\nPOST /api/payments/intent  // Create payment intent\nPOST /api/payments/verify  // Verify payment completion\nGET  /api/payments/history // Get payment history\n</code></pre>"},{"location":"platform/technical-architecture/#rate-limiting-security","title":"Rate Limiting &amp; Security","text":"<ul> <li>IP-based rate limiting to prevent spam</li> <li>User-based limits for authenticated actions</li> <li>CORS configuration for secure cross-origin requests</li> <li>Input validation with Zod schemas</li> </ul>"},{"location":"platform/technical-architecture/#blockchain-integration_1","title":"\ud83c\udf10 Blockchain Integration","text":""},{"location":"platform/technical-architecture/#cardano-network-interaction","title":"Cardano Network Interaction","text":"<pre><code>// Wallet connection with CIP-30\nconst wallet = await window.cardano[walletName].enable();\nconst api = await wallet.getApi();\n\n// Message signing for authentication\nconst signature = await api.signData(\n  Buffer.from(challenge).toString('hex'),\n  Buffer.from(address).toString('hex')\n);\n\n// Transaction building for payments\nconst tx = await lucid\n  .newTx()\n  .payToAddress(recipientAddress, { lovelace: amount })\n  .complete();\n\nconst signedTx = await tx.sign().complete();\nconst txHash = await signedTx.submit();\n</code></pre>"},{"location":"platform/technical-architecture/#ada-handle-integration","title":"ADA Handle Integration","text":"<ul> <li>Blockfrost API for handle resolution</li> <li>Automatic detection when wallets connect</li> <li>Handle verification against on-chain data</li> <li>Profile URL routing with handle support</li> </ul>"},{"location":"platform/technical-architecture/#file-storage-ipfs","title":"\ud83d\udcc1 File Storage &amp; IPFS","text":""},{"location":"platform/technical-architecture/#decentralized-media-storage","title":"Decentralized Media Storage","text":"<pre><code>// IPFS upload process\nconst uploadToIPFS = async (file: File) =&gt; {\n  const client = new Web3Storage({ token: process.env.WEB3_STORAGE_TOKEN });\n\n  const cid = await client.put([file], {\n    name: `post-media-${Date.now()}`,\n    maxRetries: 3,\n    wrapWithDirectory: false\n  });\n\n  return `https://${cid}.ipfs.w3s.link`;\n};\n</code></pre>"},{"location":"platform/technical-architecture/#media-processing-pipeline","title":"Media Processing Pipeline","text":"<ul> <li>Client-side resizing for optimal upload sizes</li> <li>Format validation (images, videos, GIFs)</li> <li>Preview generation during upload</li> <li>Watermarking for paid content</li> <li>Signed URLs for secure access</li> </ul>"},{"location":"platform/technical-architecture/#deployment-scaling","title":"\ud83d\ude80 Deployment &amp; Scaling","text":""},{"location":"platform/technical-architecture/#production-architecture","title":"Production Architecture","text":"<pre><code># Docker containerization\nFROM node:18-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm ci --only=production\nCOPY . .\nRUN npm run build\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"platform/technical-architecture/#environment-configuration","title":"Environment Configuration","text":"<ul> <li>Mainnet/Testnet blockchain network support</li> <li>Environment variables for API keys and secrets</li> <li>Feature flags for gradual rollouts</li> <li>Monitoring with error tracking and analytics</li> </ul>"},{"location":"platform/technical-architecture/#scaling-considerations","title":"Scaling Considerations","text":"<ul> <li>CDN integration for static assets</li> <li>Database connection pooling for concurrent users</li> <li>Redis caching for session management</li> <li>Load balancing for high availability</li> <li>Horizontal scaling with container orchestration</li> </ul>"},{"location":"platform/technical-architecture/#monitoring-analytics","title":"\ud83d\udd0d Monitoring &amp; Analytics","text":""},{"location":"platform/technical-architecture/#performance-monitoring","title":"Performance Monitoring","text":"<ul> <li>Core Web Vitals tracking</li> <li>API response times monitoring</li> <li>Database query performance analysis</li> <li>Blockchain interaction latency tracking</li> </ul>"},{"location":"platform/technical-architecture/#user-analytics","title":"User Analytics","text":"<ul> <li>Engagement metrics (posts, reactions, follows)</li> <li>Content performance analysis</li> <li>Token interaction tracking</li> <li>Monetization metrics for creators</li> </ul> <p>This architecture ensures Proof of Post delivers a fast, secure, and scalable social media experience while maintaining the decentralized principles that make it unique in the social media landscape.</p> <p>Next: Explore the Social Media Features to see how users interact with the platform.</p>"},{"location":"platform/what-is-proof-of-post/","title":"What is Proof of Post?","text":"<p>Proof of Post is a Cardano-native social media platform - essentially a Twitter-like decentralized social network built specifically for the Cardano ecosystem. It's a comprehensive social platform that combines traditional social media features with advanced blockchain integration and cryptocurrency functionality.</p>"},{"location":"platform/what-is-proof-of-post/#the-vision","title":"The Vision","text":"<p>Proof of Post represents the evolution of social media, where users can:</p> <ul> <li>Connect via Cardano wallets instead of traditional login systems</li> <li>Verify identity through on-chain ADA handles</li> <li>Monetize content through paid media and tipping</li> <li>Interact with tokens and DeFi directly within the social experience</li> <li>Maintain cryptographic proof of their posts and interactions</li> <li>Participate in a decentralized social economy built on Cardano</li> </ul>"},{"location":"platform/what-is-proof-of-post/#core-concept","title":"Core Concept","text":"<p>Unlike traditional social media platforms that rely on centralized servers and advertising models, Proof of Post leverages the Cardano blockchain to create a truly decentralized social experience where:</p>"},{"location":"platform/what-is-proof-of-post/#decentralized-identity","title":"Decentralized Identity","text":"<p>Users authenticate using their Cardano wallets, with support for ADA handles as verified on-chain identities. This eliminates the need for traditional username/password systems and provides cryptographic proof of identity.</p>"},{"location":"platform/what-is-proof-of-post/#content-ownership","title":"Content Ownership","text":"<p>All posts are cryptographically signed, providing immutable proof of authorship. Content is stored on IPFS for decentralized access, ensuring your data isn't locked into any single platform.</p>"},{"location":"platform/what-is-proof-of-post/#economic-integration","title":"Economic Integration","text":"<p>The platform natively supports Cardano's token ecosystem, allowing users to tip creators, monetize content, and interact with DeFi protocols directly within their social experience.</p>"},{"location":"platform/what-is-proof-of-post/#cryptographic-security","title":"Cryptographic Security","text":"<p>Every post can be cryptographically verified, preventing impersonation and ensuring the integrity of content and interactions.</p>"},{"location":"platform/what-is-proof-of-post/#target-audience","title":"Target Audience","text":"<p>Proof of Post is designed for:</p> <ul> <li>Cardano Community Members who want to connect and share within the ecosystem</li> <li>Content Creators looking to monetize their work directly without intermediaries</li> <li>Token Projects wanting to engage with their communities</li> <li>DeFi Users who want to discuss and share trading insights</li> <li>Privacy-Conscious Users seeking alternatives to traditional social media</li> <li>Blockchain Enthusiasts interested in decentralized social networking</li> </ul>"},{"location":"platform/what-is-proof-of-post/#the-difference","title":"The Difference","text":"<p>What sets Proof of Post apart from traditional social media:</p> Traditional Social Media Proof of Post Username/password login Wallet-based authentication Centralized identity On-chain ADA handles Ad-based monetization Direct creator monetization Platform-locked content IPFS-stored, portable content No content ownership proof Cryptographic post signatures Centralized moderation Community-driven governance Fiat-based transactions Native crypto integration"},{"location":"platform/what-is-proof-of-post/#getting-started","title":"Getting Started","text":"<p>To join Proof of Post, you simply need:</p> <ol> <li>A Cardano Wallet (Eternl, Lace, or Vespr)</li> <li>Some ADA for transactions and tips</li> <li>An ADA Handle (optional, but recommended for verified identity)</li> </ol> <p>The platform handles all the complex blockchain interactions behind the scenes, providing a familiar social media experience enhanced with crypto capabilities.</p> <p>Ready to explore what makes Proof of Post unique? Continue to Key Features to learn about all the platform capabilities.</p>"},{"location":"social/links/","title":"Social Links","text":"<p>Connect with the Proof of Post community and access the protocol.</p>"},{"location":"social/links/#official-links","title":"Official Links","text":"<ul> <li>Protocol: proofofpost.io</li> <li>Twitter/X: @proofofpost_io</li> <li>Discord: Join our community</li> </ul>"},{"location":"user-guide/creating-content/","title":"Creating Content","text":"<p>Master the art of content creation on Proof of Post with this comprehensive guide covering everything from basic posts to advanced monetization strategies.</p>"},{"location":"user-guide/creating-content/#content-types","title":"\ud83d\udcdd Content Types","text":""},{"location":"user-guide/creating-content/#text-posts","title":"Text Posts","text":"<ul> <li>Character limit: 280 characters (like Twitter)</li> <li>Rich formatting: Automatic URL, mention, and hashtag detection</li> <li>Emoji support: Use emojis to express emotions and reactions</li> <li>Line breaks: Use Shift+Enter for line breaks within posts</li> </ul>"},{"location":"user-guide/creating-content/#media-posts","title":"Media Posts","text":"<ul> <li>Images: JPEG, PNG, WebP up to 10MB each</li> <li>Videos: MP4, WebM up to 100MB</li> <li>GIFs: Via Giphy integration or direct upload</li> <li>Multiple media: Up to 4 images/videos per post</li> </ul>"},{"location":"user-guide/creating-content/#interactive-content","title":"Interactive Content","text":"<ul> <li>Polls: Create community polls (coming soon)</li> <li>Threads: Connect multiple posts for long-form content</li> <li>Live updates: Real-time posting during events</li> </ul>"},{"location":"user-guide/creating-content/#advanced-composer-features","title":"\ud83c\udfa8 Advanced Composer Features","text":""},{"location":"user-guide/creating-content/#auto-suggestions","title":"Auto-Suggestions","text":"<p>The composer provides intelligent suggestions as you type: - @mentions: Suggests usernames and ADA handles - $tokens: Suggests Cardano tokens and their tickers - #hashtags: Suggests popular and trending hashtags</p>"},{"location":"user-guide/creating-content/#content-enhancement","title":"Content Enhancement","text":"<ul> <li>URL shortening: Long URLs are automatically shortened</li> <li>Link previews: Rich previews for shared links</li> <li>Media optimization: Images are automatically optimized for web</li> <li>Accessibility: Alt text support for images</li> </ul>"},{"location":"user-guide/creating-content/#monetization-options","title":"\ud83d\udcb0 Monetization Options","text":""},{"location":"user-guide/creating-content/#paid-media","title":"Paid Media","text":"<p>Transform your visual content into revenue: 1. Upload your image/video 2. Toggle \"Paid Media\" option 3. Set price in ADA (minimum 1 ADA) 4. Add compelling preview text 5. Publish with blurred preview</p>"},{"location":"user-guide/creating-content/#pricing-strategies","title":"Pricing Strategies","text":"<ul> <li>Premium content: 10-50 ADA for exclusive, high-quality content</li> <li>Educational content: 5-20 ADA for tutorials and guides</li> <li>Entertainment: 1-10 ADA for memes and casual content</li> <li>Exclusive access: 20+ ADA for behind-the-scenes content</li> </ul>"},{"location":"user-guide/creating-content/#content-analytics","title":"\ud83d\udcca Content Analytics","text":""},{"location":"user-guide/creating-content/#post-performance-metrics","title":"Post Performance Metrics","text":"<ul> <li>Views: Number of times your post was seen</li> <li>Reactions: Likes, rockets, diamonds, and degen reactions</li> <li>Boosts: Times your post was shared/retweeted</li> <li>Comments: Replies and discussion generated</li> <li>Tips received: ADA and tokens received from supporters</li> </ul>"},{"location":"user-guide/creating-content/#audience-insights","title":"Audience Insights","text":"<ul> <li>Follower growth: Track how content affects your following</li> <li>Engagement rate: Percentage of followers who interact</li> <li>Best performing content: Identify what resonates with your audience</li> <li>Optimal posting times: When your audience is most active</li> </ul>"},{"location":"user-guide/creating-content/#content-strategy","title":"\ud83c\udfaf Content Strategy","text":""},{"location":"user-guide/creating-content/#building-your-brand","title":"Building Your Brand","text":"<ul> <li>Consistent voice: Develop a recognizable posting style</li> <li>Visual identity: Use consistent colors and aesthetics</li> <li>Niche expertise: Become known for specific topics</li> <li>Community engagement: Actively participate in discussions</li> </ul>"},{"location":"user-guide/creating-content/#content-calendar","title":"Content Calendar","text":"<ul> <li>Regular posting: Maintain consistent posting schedule</li> <li>Content variety: Mix text, images, and interactive content</li> <li>Trending topics: Participate in relevant discussions</li> <li>Seasonal content: Align with crypto market cycles and events</li> </ul> <p>Ready to start monetizing? Learn about Monetizing Content next.</p>"},{"location":"user-guide/getting-started/","title":"Getting Started","text":"<p>Welcome to Proof of Post! This guide will walk you through everything you need to know to start using the platform, from connecting your wallet to creating your first post.</p>"},{"location":"user-guide/getting-started/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"user-guide/getting-started/#what-youll-need","title":"What You'll Need","text":"<p>Before getting started, make sure you have: - A Cardano Wallet (Eternl, Lace, or Vespr) - Some ADA for transactions and tips (minimum 5 ADA recommended) - An ADA Handle (optional, but recommended for verified identity)</p>"},{"location":"user-guide/getting-started/#5-minute-setup","title":"5-Minute Setup","text":"<ol> <li>Visit the Platform - Go to proofofpost.io</li> <li>Connect Your Wallet - Click \"Connect Wallet\" and choose your preferred wallet</li> <li>Sign Authentication - Sign the message to verify wallet ownership</li> <li>Complete Profile - Add username, bio, and profile picture</li> <li>Start Posting - Create your first post and join the community!</li> </ol>"},{"location":"user-guide/getting-started/#connecting-your-wallet","title":"\ud83d\udd17 Connecting Your Wallet","text":""},{"location":"user-guide/getting-started/#step-by-step-wallet-connection","title":"Step-by-Step Wallet Connection","text":""},{"location":"user-guide/getting-started/#1-choose-your-wallet","title":"1. Choose Your Wallet","text":"<p>Click the \"Connect Wallet\" button and select from available options: - Eternl - Feature-rich with advanced capabilities - Lace - IOG's official light wallet - Vespr - Community-focused wallet</p>"},{"location":"user-guide/getting-started/#2-grant-permissions","title":"2. Grant Permissions","text":"<p>Your wallet will ask for permission to: - Connect to the site - Allow the platform to communicate with your wallet - Read wallet addresses - Get your wallet address for authentication - Sign messages - Enable authentication and post signing</p>"},{"location":"user-guide/getting-started/#3-sign-authentication-challenge","title":"3. Sign Authentication Challenge","text":"<ul> <li>The platform generates a unique challenge message</li> <li>Your wallet will ask you to sign this message</li> <li>This proves you own the wallet without revealing private keys</li> <li>No ADA is spent during authentication</li> </ul>"},{"location":"user-guide/getting-started/#4-complete-connection","title":"4. Complete Connection","text":"<ul> <li>Once signed, you'll be automatically logged in</li> <li>Your wallet address becomes your unique identifier</li> <li>ADA handles (if you have one) are automatically detected</li> </ul>"},{"location":"user-guide/getting-started/#troubleshooting-connection-issues","title":"Troubleshooting Connection Issues","text":""},{"location":"user-guide/getting-started/#wallet-not-detected","title":"Wallet Not Detected","text":"<ul> <li>Ensure your wallet extension is installed and enabled</li> <li>Refresh the page and try again</li> <li>Check that your wallet is unlocked</li> <li>Try a different browser if issues persist</li> </ul>"},{"location":"user-guide/getting-started/#connection-failed","title":"Connection Failed","text":"<ul> <li>Make sure you have a stable internet connection</li> <li>Verify your wallet has the latest version</li> <li>Clear browser cache and cookies</li> <li>Disable other wallet extensions temporarily</li> </ul>"},{"location":"user-guide/getting-started/#authentication-errors","title":"Authentication Errors","text":"<ul> <li>Ensure you're signing the correct message</li> <li>Don't modify the challenge message</li> <li>Try disconnecting and reconnecting your wallet</li> <li>Contact support if problems continue</li> </ul>"},{"location":"user-guide/getting-started/#setting-up-your-profile","title":"\ud83d\udc64 Setting Up Your Profile","text":""},{"location":"user-guide/getting-started/#profile-information","title":"Profile Information","text":"<p>After connecting your wallet, complete your profile:</p>"},{"location":"user-guide/getting-started/#basic-information","title":"Basic Information","text":"<ul> <li>Username - Choose a unique handle (e.g., @cryptoexplorer)</li> <li>Display Name - Your full name or preferred display name</li> <li>Bio - Brief description of yourself (280 characters)</li> <li>Location - Optional location information</li> </ul>"},{"location":"user-guide/getting-started/#profile-images","title":"Profile Images","text":"<ul> <li>Avatar - Profile picture (recommended: 400x400px)</li> <li>Banner - Cover image (recommended: 1500x500px)</li> <li>Supported formats - JPEG, PNG, WebP</li> <li>Maximum size - 10MB per image</li> </ul>"},{"location":"user-guide/getting-started/#social-links","title":"Social Links","text":"<p>Add links to your other social media profiles: - Website - Your personal or business website - Twitter - Your Twitter/X handle - Discord - Discord server or username - Telegram - Telegram channel or username - GitHub - For developers and technical users</p>"},{"location":"user-guide/getting-started/#identity-verification","title":"Identity Verification","text":""},{"location":"user-guide/getting-started/#ada-handle-integration","title":"ADA Handle Integration","text":"<p>If you own an ADA handle: - It will be automatically detected when you connect - Displays as <code>$yourhandle</code> on your profile - Provides verification badge indicating on-chain identity - Can be used in profile URLs (e.g., <code>/profile/$yourhandle</code>)</p>"},{"location":"user-guide/getting-started/#verification-badge","title":"Verification Badge","text":"<ul> <li>Blue checkmark indicates verified ADA handle</li> <li>Helps prevent impersonation</li> <li>Builds trust with other users</li> <li>Required for some advanced features</li> </ul>"},{"location":"user-guide/getting-started/#creating-your-first-post","title":"\ud83d\udcdd Creating Your First Post","text":""},{"location":"user-guide/getting-started/#using-the-post-composer","title":"Using the Post Composer","text":""},{"location":"user-guide/getting-started/#1-access-the-composer","title":"1. Access the Composer","text":"<ul> <li>Click the \"What's happening?\" text box</li> <li>Or use the floating compose button on mobile</li> <li>Composer expands to show full features</li> </ul>"},{"location":"user-guide/getting-started/#2-write-your-content","title":"2. Write Your Content","text":"<ul> <li>Text limit - 280 characters (like Twitter)</li> <li>Real-time counter - Shows remaining characters</li> <li>Auto-suggestions - Platform suggests tokens, users, hashtags</li> <li>Rich formatting - URLs, mentions, and hashtags are automatically formatted</li> </ul>"},{"location":"user-guide/getting-started/#3-add-media-optional","title":"3. Add Media (Optional)","text":"<ul> <li>Click the image icon to add photos</li> <li>Support for multiple images (up to 4 per post)</li> <li>GIF picker for animated content via Giphy</li> <li>Video support for short clips</li> </ul>"},{"location":"user-guide/getting-started/#4-use-special-features","title":"4. Use Special Features","text":"<ul> <li>Hashtags - Use <code>#topic</code> to categorize your post</li> <li>Token mentions - Reference <code>$TOKEN</code> to link to token pages</li> <li>User mentions - Tag <code>@username</code> or <code>$handle</code> to notify users</li> <li>Paid media - Toggle to monetize images/videos</li> </ul>"},{"location":"user-guide/getting-started/#5-post-options","title":"5. Post Options","text":"<ul> <li>Post signature - Cryptographically sign your post for verification</li> <li>Audience settings - Control who can see your post</li> <li>Scheduling - Schedule posts for later (coming soon)</li> </ul>"},{"location":"user-guide/getting-started/#content-best-practices","title":"Content Best Practices","text":""},{"location":"user-guide/getting-started/#writing-engaging-posts","title":"Writing Engaging Posts","text":"<ul> <li>Be authentic - Share genuine thoughts and experiences</li> <li>Use hashtags wisely - Include relevant hashtags for discoverability</li> <li>Engage with others - Reply to comments and participate in discussions</li> <li>Share valuable content - Provide insights, news, or entertainment</li> <li>Be respectful - Follow community guidelines and treat others kindly</li> </ul>"},{"location":"user-guide/getting-started/#visual-content-tips","title":"Visual Content Tips","text":"<ul> <li>High-quality images - Use clear, well-lit photos</li> <li>Relevant visuals - Ensure images relate to your text content</li> <li>Optimize for mobile - Most users browse on mobile devices</li> <li>Use alt text - Describe images for accessibility</li> <li>Consider monetization - High-quality content can be monetized</li> </ul>"},{"location":"user-guide/getting-started/#discovering-content","title":"\ud83d\udd0d Discovering Content","text":""},{"location":"user-guide/getting-started/#exploring-the-platform","title":"Exploring the Platform","text":""},{"location":"user-guide/getting-started/#home-feed","title":"Home Feed","text":"<ul> <li>Personalized timeline - Posts from users you follow</li> <li>Chronological order - Latest posts appear first</li> <li>Infinite scroll - Automatically loads more content</li> <li>Real-time updates - New posts appear automatically</li> </ul>"},{"location":"user-guide/getting-started/#search-discovery","title":"Search &amp; Discovery","text":"<ul> <li>Search bar - Find posts, users, tokens, and topics</li> <li>Trending topics - Discover popular hashtags</li> <li>Token pages - Dedicated pages for each Cardano token</li> <li>User profiles - Explore other users' content and followers</li> </ul>"},{"location":"user-guide/getting-started/#navigation-tips","title":"Navigation Tips","text":"<ul> <li>Smooth scrolling - Optimized for 60fps performance</li> <li>Modal overlays - Click posts for detailed view without losing scroll position</li> <li>Keyboard shortcuts - Use keyboard for faster navigation</li> <li>Mobile optimization - Full feature parity on mobile devices</li> </ul>"},{"location":"user-guide/getting-started/#pro-tips","title":"\ud83d\udca1 Pro Tips","text":""},{"location":"user-guide/getting-started/#getting-more-engagement","title":"Getting More Engagement","text":"<ul> <li>Post regularly - Consistent posting builds audience</li> <li>Engage authentically - Like, comment, and share others' content</li> <li>Use relevant hashtags - Help people discover your content</li> <li>Time your posts - Post when your audience is most active</li> <li>Join conversations - Participate in trending topics</li> </ul>"},{"location":"user-guide/getting-started/#building-your-network","title":"Building Your Network","text":"<ul> <li>Follow interesting users - Curate your feed with quality content</li> <li>Engage with comments - Build relationships through conversations</li> <li>Share valuable insights - Become known for expertise in your area</li> <li>Support creators - Use the tipping system to support good content</li> <li>Join communities - Participate in token-specific discussions</li> </ul>"},{"location":"user-guide/getting-started/#security-best-practices","title":"Security Best Practices","text":"<ul> <li>Never share private keys - The platform never needs your seed phrase</li> <li>Verify URLs - Always check you're on the official domain</li> <li>Use strong passwords - For your wallet (not the platform)</li> <li>Keep software updated - Update your wallet and browser regularly</li> <li>Be cautious with links - Verify external links before clicking</li> </ul>"},{"location":"user-guide/getting-started/#next-steps","title":"\ud83c\udfaf Next Steps","text":"<p>Now that you're set up, explore these features:</p> <ol> <li>Creating Content - Learn advanced content creation techniques</li> <li>Wallet Connection - Deep dive into wallet features</li> <li>Monetizing Content - Start earning from your content</li> </ol>"},{"location":"user-guide/getting-started/#getting-help","title":"Getting Help","text":"<ul> <li>Community Support - Ask questions in the community</li> <li>Documentation - Comprehensive guides and tutorials</li> <li>Social Media - Follow official accounts for updates</li> <li>Direct Support - Contact team for technical issues</li> </ul> <p>Welcome to the decentralized social media revolution! \ud83d\ude80</p>"},{"location":"user-guide/monetizing-content/","title":"Monetizing Content","text":"<p>Learn how to earn ADA and other tokens directly from your content on Proof of Post, with no platform fees or intermediaries.</p>"},{"location":"user-guide/monetizing-content/#paid-media-system","title":"\ud83d\udc8e Paid Media System","text":""},{"location":"user-guide/monetizing-content/#setting-up-paid-content","title":"Setting Up Paid Content","text":"<ol> <li>Create post with image or video</li> <li>Toggle \"Paid Media\" option in composer</li> <li>Set price in ADA (minimum 1 ADA)</li> <li>Add preview text to entice viewers</li> <li>Publish with blurred preview</li> </ol>"},{"location":"user-guide/monetizing-content/#pricing-guidelines","title":"Pricing Guidelines","text":"<ul> <li>Educational content: 5-20 ADA for tutorials</li> <li>Exclusive content: 10-50 ADA for behind-the-scenes</li> <li>High-quality art: 20+ ADA for original artwork</li> <li>Memes/casual: 1-5 ADA for entertainment</li> </ul>"},{"location":"user-guide/monetizing-content/#payment-process","title":"Payment Process","text":"<ul> <li>User clicks unlock on your paid content</li> <li>Wallet transaction initiated automatically</li> <li>Blockchain verification confirms payment</li> <li>Content unlocked with full resolution</li> <li>ADA sent directly to your wallet</li> </ul>"},{"location":"user-guide/monetizing-content/#tipping-system","title":"\ud83c\udfaf Tipping System","text":""},{"location":"user-guide/monetizing-content/#receiving-tips","title":"Receiving Tips","text":"<ul> <li>Automatic tip buttons appear on all posts</li> <li>Multiple amounts: Users can tip 1, 5, 10+ ADA</li> <li>Multi-token support: Receive various Cardano tokens</li> <li>Instant delivery: Tips go directly to your wallet</li> <li>Public recognition: Tips visible to show community support</li> </ul>"},{"location":"user-guide/monetizing-content/#maximizing-tips","title":"Maximizing Tips","text":"<ul> <li>Quality content: High-value posts receive more tips</li> <li>Community engagement: Active participation builds supporters</li> <li>Consistent posting: Regular content keeps audience engaged</li> <li>Respond to supporters: Thank tippers to build loyalty</li> </ul>"},{"location":"user-guide/monetizing-content/#earnings-tracking","title":"\ud83d\udcca Earnings Tracking","text":""},{"location":"user-guide/monetizing-content/#revenue-analytics","title":"Revenue Analytics","text":"<ul> <li>Total earnings: Lifetime income from all sources</li> <li>Monthly breakdown: Track monthly performance</li> <li>Content performance: See which posts earn most</li> <li>Tip analysis: Understand your supporter base</li> <li>Growth trends: Monitor earning trajectory</li> </ul>"},{"location":"user-guide/monetizing-content/#tax-considerations","title":"Tax Considerations","text":"<ul> <li>Transaction records: All payments recorded on blockchain</li> <li>Export functionality: Download transaction history</li> <li>USD conversion: Track fiat value for tax reporting</li> <li>Professional advice: Consult tax professionals for compliance</li> </ul>"},{"location":"user-guide/monetizing-content/#success-strategies","title":"\ud83d\ude80 Success Strategies","text":""},{"location":"user-guide/monetizing-content/#content-quality","title":"Content Quality","text":"<ul> <li>High-resolution images: Professional quality attracts more buyers</li> <li>Unique perspectives: Original content commands higher prices</li> <li>Educational value: Tutorials and guides perform well</li> <li>Exclusive access: Behind-the-scenes content builds premium audience</li> </ul>"},{"location":"user-guide/monetizing-content/#community-building","title":"Community Building","text":"<ul> <li>Engage authentically: Build genuine relationships</li> <li>Support others: Tip other creators to build goodwill</li> <li>Join conversations: Participate in token community discussions</li> <li>Collaborate: Work with other creators for cross-promotion</li> </ul>"},{"location":"user-guide/monetizing-content/#optimization-tips","title":"Optimization Tips","text":"<ul> <li>A/B test pricing: Try different price points</li> <li>Compelling previews: Make blurred content intriguing</li> <li>Clear value proposition: Explain why content is worth the price</li> <li>Timing matters: Post when your audience is most active</li> </ul> <p>Start earning from your content today! The decentralized creator economy awaits.</p>"},{"location":"user-guide/wallet-connection/","title":"Wallet Connection Guide","text":"<p>Complete guide to connecting and managing your Cardano wallet on Proof of Post, including troubleshooting and advanced features.</p>"},{"location":"user-guide/wallet-connection/#supported-wallets","title":"\ud83d\udd17 Supported Wallets","text":""},{"location":"user-guide/wallet-connection/#browser-extension-wallets","title":"Browser Extension Wallets","text":"<ul> <li>Eternl - Advanced features, hardware wallet support</li> <li>Lace - IOG's official wallet, modern design</li> <li>Vespr - Community-focused features</li> </ul>"},{"location":"user-guide/wallet-connection/#connection-process","title":"Connection Process","text":"<ol> <li>Install wallet extension in your browser</li> <li>Create or restore wallet with seed phrase</li> <li>Visit Proof of Post and click \"Connect Wallet\"</li> <li>Select your wallet from available options</li> <li>Grant permissions when prompted</li> <li>Sign authentication message to verify ownership</li> </ol>"},{"location":"user-guide/wallet-connection/#security-features","title":"\ud83d\udee1\ufe0f Security Features","text":""},{"location":"user-guide/wallet-connection/#authentication-process","title":"Authentication Process","text":"<ul> <li>Challenge-response system: Prevents replay attacks</li> <li>Message signing: Uses CIP-8 standard for security</li> <li>No private key exposure: Platform never accesses your keys</li> <li>Session management: Secure JWT tokens for authenticated sessions</li> </ul>"},{"location":"user-guide/wallet-connection/#best-practices","title":"Best Practices","text":"<ul> <li>Never share seed phrases: Platform will never ask for your seed phrase</li> <li>Verify URLs: Always check you're on the official domain</li> <li>Keep wallets updated: Use latest wallet versions for security</li> <li>Use hardware wallets: For maximum security with supported wallets</li> </ul>"},{"location":"user-guide/wallet-connection/#wallet-features","title":"\ud83d\udcb0 Wallet Features","text":""},{"location":"user-guide/wallet-connection/#balance-assets","title":"Balance &amp; Assets","text":"<ul> <li>ADA balance: Real-time balance display</li> <li>Token holdings: All Cardano native tokens</li> <li>NFT collection: Display your NFTs in profile</li> <li>Portfolio value: USD value of holdings</li> </ul>"},{"location":"user-guide/wallet-connection/#transaction-capabilities","title":"Transaction Capabilities","text":"<ul> <li>Tipping: Send ADA/tokens to creators</li> <li>Paid content: Purchase access to monetized media</li> <li>Transaction history: View all platform-related transactions</li> <li>Gas fee estimation: See transaction costs before signing</li> </ul>"},{"location":"user-guide/wallet-connection/#troubleshooting","title":"\ud83d\udd27 Troubleshooting","text":""},{"location":"user-guide/wallet-connection/#common-issues","title":"Common Issues","text":"<ul> <li>Wallet not detected: Ensure extension is installed and enabled</li> <li>Connection timeout: Check internet connection and try again</li> <li>Authentication failed: Verify you're signing the correct message</li> <li>Balance not updating: Refresh page or reconnect wallet</li> </ul>"},{"location":"user-guide/wallet-connection/#advanced-solutions","title":"Advanced Solutions","text":"<ul> <li>Clear browser cache: Resolve connection issues</li> <li>Disable conflicting extensions: Other wallets may interfere</li> <li>Try different browser: Some wallets work better in specific browsers</li> <li>Contact wallet support: For wallet-specific issues</li> </ul> <p>Ready to learn about earning? Check out Monetizing Content.</p>"}]}